// Generated by CIRCT firtool-1.61.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module TransposePreloadUnroller(
  input         clock,
                reset,
  output        io_in_ready,	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:15:14]
  input         io_in_valid,	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:15:14]
  input  [6:0]  io_in_bits_cmd_inst_funct,	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:15:14]
  input  [63:0] io_in_bits_cmd_rs1,	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:15:14]
                io_in_bits_cmd_rs2,	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:15:14]
  input  [5:0]  io_in_bits_rob_id_bits,	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:15:14]
  input         io_out_ready,	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:15:14]
  output        io_out_valid,	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:15:14]
  output [6:0]  io_out_bits_cmd_inst_funct,	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:15:14]
  output [63:0] io_out_bits_cmd_rs1,	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:15:14]
                io_out_bits_cmd_rs2,	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:15:14]
  output        io_out_bits_rob_id_valid,	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:15:14]
  output [5:0]  io_out_bits_rob_id_bits	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:15:14]
);

  wire        _q_io_deq_valid_0;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:53:19]
  wire        _q_io_deq_valid_1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:53:19]
  wire [6:0]  _q_io_deq_bits_0_cmd_inst_funct;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:53:19]
  wire [63:0] _q_io_deq_bits_0_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:53:19]
  wire [63:0] _q_io_deq_bits_0_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:53:19]
  wire [5:0]  _q_io_deq_bits_0_rob_id_bits;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:53:19]
  wire [6:0]  _q_io_deq_bits_1_cmd_inst_funct;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:53:19]
  wire [63:0] _q_io_deq_bits_1_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:53:19]
  wire [63:0] _q_io_deq_bits_1_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:53:19]
  wire [5:0]  _q_io_deq_bits_1_rob_id_bits;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:53:19]
  reg  [1:0]  state;	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:26:22]
  wire        _state_T = state == 2'h0;	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:26:22, :36:71, :79:22]
  wire        first_preload = _q_io_deq_valid_0 & _q_io_deq_bits_0_cmd_inst_funct == 7'h6 & _state_T;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:53:19, generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:36:{46,62,71}]
  reg         b_transposed_and_ws;	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:38:32]
  wire        _io_out_valid_output = first_preload ? ~b_transposed_and_ws | _q_io_deq_valid_1 : state[1] | _q_io_deq_valid_0;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:53:19, generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:26:22, :36:62, :38:32, :58:{23,44}, :59:12, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire        _q_io_deq_pop_T_1 = first_preload & b_transposed_and_ws & _q_io_deq_valid_1 & _q_io_deq_bits_1_cmd_inst_funct == 7'h4;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:53:19, generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:36:62, :38:32, :39:70, :63:20]
  wire        _state_T_1 = state == 2'h1;	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:26:22, :64:12, :77:13]
  wire        _GEN = _q_io_deq_pop_T_1 | ~_state_T_1;	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:63:20, :64:12, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire        _q_io_deq_pop_T = io_out_ready & _io_out_valid_output;	// @[src/main/scala/chisel3/util/Decoupled.scala:52:35, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire        is_config = _q_io_deq_bits_0_cmd_inst_funct == 7'h0 & _q_io_deq_bits_0_cmd_rs1[1:0] == 2'h0;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:53:19, generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:54:40, :55:{29,44,63}, :79:22]
  always @(posedge clock) begin
    if (reset)
      state <= 2'h0;	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:26:22, :79:22]
    else if (~_q_io_deq_pop_T | is_config) begin	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:26:22, :55:44, :70:22, :71:22, src/main/scala/chisel3/util/Decoupled.scala:52:35]
    end
    else if (_q_io_deq_pop_T_1)	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:63:20]
      state <= 2'h1;	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:26:22, :77:13]
    else if (|state) begin	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:26:22, :78:23]
      if (_state_T)	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:36:71]
        state <= 2'h1;	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:26:22, :77:13]
      else	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:36:71]
        state <= {_state_T_1, 1'h0};	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:26:22, :64:12, :79:22]
    end
    if (_q_io_deq_pop_T & is_config & ~(_q_io_deq_bits_0_cmd_rs1[7]))	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:53:19, generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:38:32, :55:44, :70:22, :71:22, :72:45, :73:{13,32}, :74:29, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      b_transposed_and_ws <= _q_io_deq_bits_0_cmd_rs1[9];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:53:19, generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:38:32, :74:123]
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;
        state = _RANDOM[/*Zero width*/ 1'b0][1:0];	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:26:22]
        b_transposed_and_ws = _RANDOM[/*Zero width*/ 1'b0][2];	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:26:22, :38:32]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  MultiHeadedQueue q (	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:53:19]
    .clock                        (clock),
    .reset                        (reset),
    .io_enq_ready                 (io_in_ready),
    .io_enq_valid                 (io_in_valid),
    .io_enq_bits_cmd_inst_funct   (io_in_bits_cmd_inst_funct),
    .io_enq_bits_cmd_rs1          (io_in_bits_cmd_rs1),
    .io_enq_bits_cmd_rs2          (io_in_bits_cmd_rs2),
    .io_enq_bits_rob_id_bits      (io_in_bits_rob_id_bits),
    .io_deq_valid_0               (_q_io_deq_valid_0),
    .io_deq_valid_1               (_q_io_deq_valid_1),
    .io_deq_bits_0_cmd_inst_funct (_q_io_deq_bits_0_cmd_inst_funct),
    .io_deq_bits_0_cmd_rs1        (_q_io_deq_bits_0_cmd_rs1),
    .io_deq_bits_0_cmd_rs2        (_q_io_deq_bits_0_cmd_rs2),
    .io_deq_bits_0_rob_id_bits    (_q_io_deq_bits_0_rob_id_bits),
    .io_deq_bits_1_cmd_inst_funct (_q_io_deq_bits_1_cmd_inst_funct),
    .io_deq_bits_1_cmd_rs1        (_q_io_deq_bits_1_cmd_rs1),
    .io_deq_bits_1_cmd_rs2        (_q_io_deq_bits_1_cmd_rs2),
    .io_deq_bits_1_rob_id_bits    (_q_io_deq_bits_1_rob_id_bits),
    .io_deq_pop                   (_q_io_deq_pop_T & ~_q_io_deq_pop_T_1 & state != 2'h1)	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:26:22, :63:20, :68:{31,66,75}, :77:13, src/main/scala/chisel3/util/Decoupled.scala:52:35]
  );
  assign io_out_valid = _io_out_valid_output;	// @[src/main/scala/chisel3/util/Mux.scala:141:16]
  assign io_out_bits_cmd_inst_funct = _GEN ? _q_io_deq_bits_0_cmd_inst_funct : 7'h5;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:53:19, generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:48:36, src/main/scala/chisel3/util/Mux.scala:141:16]
  assign io_out_bits_cmd_rs1 = _q_io_deq_pop_T_1 ? _q_io_deq_bits_0_cmd_rs1 : _state_T_1 ? _q_io_deq_bits_1_cmd_rs1 : state == 2'h2 ? {_q_io_deq_bits_0_cmd_rs1[63:32], 32'hFFFFFFFF} : _q_io_deq_bits_0_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:53:19, generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:26:22, :28:22, :52:{36,52}, :63:20, :64:12, :65:12, src/main/scala/chisel3/util/Mux.scala:141:16]
  assign io_out_bits_cmd_rs2 = _q_io_deq_pop_T_1 ? {_q_io_deq_bits_0_cmd_rs2[63:32], 32'hFFFFFFFF} : _state_T_1 ? _q_io_deq_bits_1_cmd_rs2 : _q_io_deq_bits_0_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:53:19, generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:28:22, :42:{35,51}, :63:20, :64:12, src/main/scala/chisel3/util/Mux.scala:141:16]
  assign io_out_bits_rob_id_valid = ~(_q_io_deq_pop_T_1 | _state_T_1);	// @[generators/gemmini/src/main/scala/gemmini/TransposePreloadUnroller.scala:63:20, :64:12, src/main/scala/chisel3/util/Mux.scala:141:16]
  assign io_out_bits_rob_id_bits = _GEN ? _q_io_deq_bits_0_rob_id_bits : _q_io_deq_bits_1_rob_id_bits;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:53:19, src/main/scala/chisel3/util/Mux.scala:141:16]
endmodule

