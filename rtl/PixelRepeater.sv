// Generated by CIRCT firtool-1.61.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module PixelRepeater(
  input         clock,
                reset,
  output        io_req_ready,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
  input         io_req_valid,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
                io_req_bits_mask_0,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
                io_req_bits_mask_1,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
                io_req_bits_mask_2,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
                io_req_bits_mask_3,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
                io_req_bits_mask_4,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
                io_req_bits_mask_5,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
                io_req_bits_mask_6,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
                io_req_bits_mask_7,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
                io_req_bits_laddr_is_acc_addr,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
                io_req_bits_laddr_accumulate,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
  input  [12:0] io_req_bits_laddr_data,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
  input  [3:0]  io_req_bits_len,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
  input  [7:0]  io_req_bits_pixel_repeats,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
  input         io_req_bits_last,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
  input  [15:0] io_req_bits_tag_cols,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
  input  [7:0]  io_req_bits_tag_cmd_id,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
  input         io_resp_ready,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
  output        io_resp_valid,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
                io_resp_bits_mask_0,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
                io_resp_bits_mask_1,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
                io_resp_bits_mask_2,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
                io_resp_bits_mask_3,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
                io_resp_bits_mask_4,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
                io_resp_bits_mask_5,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
                io_resp_bits_mask_6,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
                io_resp_bits_mask_7,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
                io_resp_bits_laddr_is_acc_addr,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
                io_resp_bits_laddr_accumulate,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
  output [12:0] io_resp_bits_laddr_data,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
  output        io_resp_bits_last,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
  output [15:0] io_resp_bits_tag_cols,	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
  output [7:0]  io_resp_bits_tag_cmd_id	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:29:14]
);

  reg         req_valid;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  reg         req_bits_mask_0;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  reg         req_bits_mask_1;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  reg         req_bits_mask_2;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  reg         req_bits_mask_3;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  reg         req_bits_mask_4;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  reg         req_bits_mask_5;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  reg         req_bits_mask_6;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  reg         req_bits_mask_7;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  reg         req_bits_laddr_is_acc_addr;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  reg         req_bits_laddr_accumulate;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  reg  [12:0] req_bits_laddr_data;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  reg  [3:0]  req_bits_len;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  reg  [7:0]  req_bits_pixel_repeats;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  reg         req_bits_last;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  reg  [15:0] req_bits_tag_cols;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  reg  [7:0]  req_bits_tag_cmd_id;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  wire        _io_resp_bits_last_T = req_bits_pixel_repeats == 8'h0;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18, :46:76]
  wire        _io_req_ready_output = ~req_valid | io_resp_ready & _io_resp_bits_last_T;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18, :46:{21,32,50,76}]
  wire [22:0] _GEN = {15'h0, req_bits_mask_7, req_bits_mask_6, req_bits_mask_5, req_bits_mask_4, req_bits_mask_3, req_bits_mask_2, req_bits_mask_1, req_bits_mask_0} << req_bits_pixel_repeats[2:0] * req_bits_len[2:0];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18, :49:41, :52:48]
  `ifndef SYNTHESIS	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:58:11]
    always @(posedge clock) begin	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:58:11]
      if (~reset & req_valid & req_bits_laddr_is_acc_addr & (|req_bits_pixel_repeats)) begin	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18, :58:{11,65}]
        if (`ASSERT_VERBOSE_COND_)	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:58:11]
          $error("Assertion failed\n    at PixelRepeater.scala:58 assert(!(req.valid && is_acc_addr && req.bits.pixel_repeats > 0.U))\n");	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:58:11]
        if (`STOP_COND_)	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:58:11]
          $fatal;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:58:11]
      end
    end // always @(posedge)
  `endif // not def SYNTHESIS
  wire [12:0] _GEN_0 = {5'h0, req_bits_pixel_repeats};	// @[generators/gemmini/src/main/scala/gemmini/LocalAddr.scala:86:26, generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  wire [13:0] _GEN_1 = {1'h0, req_bits_laddr_data};	// @[generators/gemmini/src/main/scala/gemmini/LocalAddr.scala:89:47, generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  wire [12:0] _underflow_result_data_T_3 = req_bits_laddr_data - _GEN_0;	// @[generators/gemmini/src/main/scala/gemmini/LocalAddr.scala:86:26, :89:47, generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  wire [13:0] _underflow_underflow_T_1 = {6'h0, req_bits_pixel_repeats} + 14'h1000;	// @[generators/gemmini/src/main/scala/gemmini/LocalAddr.scala:86:35, :89:47, generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  wire        underflow = ~req_bits_laddr_is_acc_addr & (req_bits_laddr_data[12] ? _GEN_1 < _underflow_underflow_T_1 : req_bits_laddr_data < _GEN_0);	// @[generators/gemmini/src/main/scala/gemmini/LocalAddr.scala:86:{26,35}, :89:47, generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18, :60:53, :65:{21,34,40}]
  wire        _io_resp_valid_output = req_valid & ~underflow;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18, :65:34, :72:{32,35}]
  wire        _GEN_2 = io_resp_ready & _io_resp_valid_output | underflow;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:65:34, :72:32, :74:23, src/main/scala/chisel3/util/Decoupled.scala:52:35]
  wire        _GEN_3 = _io_req_ready_output & io_req_valid;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:46:32, src/main/scala/chisel3/util/Decoupled.scala:52:35]
  always @(posedge clock) begin
    if (reset)
      req_valid <= 1'h0;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
    else
      req_valid <= _GEN_3 | ~(_GEN_2 & _io_resp_bits_last_T) & req_valid;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18, :46:76, :74:{23,37}, :77:44, :82:23, generators/gemmini/src/main/scala/gemmini/Util.scala:134:13, :139:13, src/main/scala/chisel3/util/Decoupled.scala:52:35]
    if (_GEN_3) begin	// @[src/main/scala/chisel3/util/Decoupled.scala:52:35]
      req_bits_mask_0 <= io_req_bits_mask_0;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
      req_bits_mask_1 <= io_req_bits_mask_1;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
      req_bits_mask_2 <= io_req_bits_mask_2;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
      req_bits_mask_3 <= io_req_bits_mask_3;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
      req_bits_mask_4 <= io_req_bits_mask_4;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
      req_bits_mask_5 <= io_req_bits_mask_5;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
      req_bits_mask_6 <= io_req_bits_mask_6;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
      req_bits_mask_7 <= io_req_bits_mask_7;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
      req_bits_laddr_is_acc_addr <= io_req_bits_laddr_is_acc_addr;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
      req_bits_laddr_accumulate <= io_req_bits_laddr_accumulate;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
      req_bits_laddr_data <= io_req_bits_laddr_data;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
      req_bits_len <= io_req_bits_len;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
      req_bits_pixel_repeats <= io_req_bits_pixel_repeats - 8'h1;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18, :84:59]
      req_bits_last <= io_req_bits_last;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
      req_bits_tag_cols <= io_req_bits_tag_cols;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
      req_bits_tag_cmd_id <= io_req_bits_tag_cmd_id;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
    end
    else if (_GEN_2)	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:74:23]
      req_bits_pixel_repeats <= req_bits_pixel_repeats - 8'h1;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18, :75:56]
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:8];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [3:0] i = 4'h0; i < 4'h9; i += 4'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        req_valid = _RANDOM[4'h0][0];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
        req_bits_mask_0 = _RANDOM[4'h2][1];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
        req_bits_mask_1 = _RANDOM[4'h2][2];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
        req_bits_mask_2 = _RANDOM[4'h2][3];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
        req_bits_mask_3 = _RANDOM[4'h2][4];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
        req_bits_mask_4 = _RANDOM[4'h2][5];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
        req_bits_mask_5 = _RANDOM[4'h2][6];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
        req_bits_mask_6 = _RANDOM[4'h2][7];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
        req_bits_mask_7 = _RANDOM[4'h2][8];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
        req_bits_laddr_is_acc_addr = _RANDOM[4'h2][9];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
        req_bits_laddr_accumulate = _RANDOM[4'h2][10];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
        req_bits_laddr_data = {_RANDOM[4'h2][31:28], _RANDOM[4'h3][8:0]};	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
        req_bits_len = _RANDOM[4'h3][12:9];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
        req_bits_pixel_repeats = _RANDOM[4'h3][20:13];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
        req_bits_last = _RANDOM[4'h3][21];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
        req_bits_tag_cols = {_RANDOM[4'h5][31:24], _RANDOM[4'h6][7:0]};	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
        req_bits_tag_cmd_id = _RANDOM[4'h8][25:18];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_req_ready = _io_req_ready_output;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:46:32]
  assign io_resp_valid = _io_resp_valid_output;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:72:32]
  assign io_resp_bits_mask_0 = _GEN[0];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:52:{48,108}]
  assign io_resp_bits_mask_1 = _GEN[1];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:52:{48,108}]
  assign io_resp_bits_mask_2 = _GEN[2];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:52:{48,108}]
  assign io_resp_bits_mask_3 = _GEN[3];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:52:{48,108}]
  assign io_resp_bits_mask_4 = _GEN[4];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:52:{48,108}]
  assign io_resp_bits_mask_5 = _GEN[5];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:52:{48,108}]
  assign io_resp_bits_mask_6 = _GEN[6];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:52:{48,108}]
  assign io_resp_bits_mask_7 = _GEN[7];	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:52:{48,108}]
  assign io_resp_bits_laddr_is_acc_addr = req_bits_laddr_is_acc_addr;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  assign io_resp_bits_laddr_accumulate = req_bits_laddr_accumulate;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  assign io_resp_bits_laddr_data = req_bits_laddr_is_acc_addr ? req_bits_laddr_data : req_bits_laddr_data[12] ? (_GEN_1 < _underflow_underflow_T_1 ? 13'h1000 : _underflow_result_data_T_3) : req_bits_laddr_data < _GEN_0 ? 13'h0 : _underflow_result_data_T_3;	// @[generators/gemmini/src/main/scala/gemmini/LocalAddr.scala:86:{26,35}, :89:{23,47}, generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18, :60:{22,53}, :70:30]
  assign io_resp_bits_last = req_bits_last & _io_resp_bits_last_T;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18, :46:76, :54:40]
  assign io_resp_bits_tag_cols = req_bits_tag_cols;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
  assign io_resp_bits_tag_cmd_id = req_bits_tag_cmd_id;	// @[generators/gemmini/src/main/scala/gemmini/PixelRepeater.scala:44:18]
endmodule

