// Generated by CIRCT firtool-1.61.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module ShiftQueue(
  input         clock,
                reset,
  output        io_enq_ready,	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:17:14]
  input         io_enq_valid,	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:17:14]
  input  [33:0] io_enq_bits_pc,	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:17:14]
  input  [31:0] io_enq_bits_data,	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:17:14]
  input         io_enq_bits_xcpt_pf_inst,	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:17:14]
                io_enq_bits_xcpt_ae_inst,	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:17:14]
                io_enq_bits_replay,	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:17:14]
                io_deq_ready,	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:17:14]
  output        io_deq_valid,	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:17:14]
  output [33:0] io_deq_bits_pc,	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:17:14]
  output [31:0] io_deq_bits_data,	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:17:14]
  output        io_deq_bits_xcpt_pf_inst,	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:17:14]
                io_deq_bits_xcpt_gf_inst,	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:17:14]
                io_deq_bits_xcpt_ae_inst,	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:17:14]
                io_deq_bits_replay,	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:17:14]
  output [4:0]  io_mask	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:17:14]
);

  reg         valid_0;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30]
  reg         valid_1;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30]
  reg         valid_2;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30]
  reg         valid_3;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30]
  reg         valid_4;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30]
  reg  [33:0] elts_0_pc;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg  [31:0] elts_0_data;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg         elts_0_xcpt_pf_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg         elts_0_xcpt_gf_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg         elts_0_xcpt_ae_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg         elts_0_replay;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg  [33:0] elts_1_pc;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg  [31:0] elts_1_data;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg         elts_1_xcpt_pf_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg         elts_1_xcpt_gf_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg         elts_1_xcpt_ae_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg         elts_1_replay;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg  [33:0] elts_2_pc;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg  [31:0] elts_2_data;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg         elts_2_xcpt_pf_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg         elts_2_xcpt_gf_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg         elts_2_xcpt_ae_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg         elts_2_replay;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg  [33:0] elts_3_pc;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg  [31:0] elts_3_data;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg         elts_3_xcpt_pf_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg         elts_3_xcpt_gf_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg         elts_3_xcpt_ae_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg         elts_3_replay;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg  [33:0] elts_4_pc;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg  [31:0] elts_4_data;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg         elts_4_xcpt_pf_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg         elts_4_xcpt_gf_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg         elts_4_xcpt_ae_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  reg         elts_4_replay;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
  wire        _valid_4_T_4 = ~valid_4 & io_enq_valid;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :31:46, src/main/scala/chisel3/util/Decoupled.scala:52:35]
  wire        wen_4 = io_deq_ready ? _valid_4_T_4 & valid_4 : _valid_4_T_4 & valid_3 & ~valid_4;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :29:10, :30:43, :31:{43,46}, src/main/scala/chisel3/util/Decoupled.scala:52:35]
  always @(posedge clock) begin
    if (reset) begin
      valid_0 <= 1'h0;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:17:14, :21:30]
      valid_1 <= 1'h0;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:17:14, :21:30]
      valid_2 <= 1'h0;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:17:14, :21:30]
      valid_3 <= 1'h0;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:17:14, :21:30]
      valid_4 <= 1'h0;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:17:14, :21:30]
    end
    else if (io_deq_ready) begin	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:17:14]
      valid_0 <= valid_1 | _valid_4_T_4 & valid_0;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :36:{28,43}, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      valid_1 <= valid_2 | _valid_4_T_4 & valid_1;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :36:{28,43}, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      valid_2 <= valid_3 | _valid_4_T_4 & valid_2;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :36:{28,43}, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      valid_3 <= valid_4 | _valid_4_T_4 & valid_3;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :36:{28,43}, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      valid_4 <= _valid_4_T_4 & valid_4;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :36:43, src/main/scala/chisel3/util/Decoupled.scala:52:35]
    end
    else begin	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:17:14]
      valid_0 <= _valid_4_T_4 | valid_0;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :37:43, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      valid_1 <= _valid_4_T_4 & valid_0 | valid_1;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :37:{23,43}, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      valid_2 <= _valid_4_T_4 & valid_1 | valid_2;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :37:{23,43}, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      valid_3 <= _valid_4_T_4 & valid_2 | valid_3;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :37:{23,43}, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      valid_4 <= _valid_4_T_4 & valid_3 | valid_4;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :37:{23,43}, src/main/scala/chisel3/util/Decoupled.scala:52:35]
    end
    if (io_deq_ready ? valid_1 | _valid_4_T_4 & valid_0 : _valid_4_T_4 & ~valid_0) begin	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :29:10, :30:{28,43}, :31:{43,46}, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      elts_0_pc <= valid_1 ? elts_1_pc : io_enq_bits_pc;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
      elts_0_data <= valid_1 ? elts_1_data : io_enq_bits_data;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
      elts_0_xcpt_pf_inst <= valid_1 ? elts_1_xcpt_pf_inst : io_enq_bits_xcpt_pf_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
      elts_0_xcpt_gf_inst <= valid_1 & elts_1_xcpt_gf_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
      elts_0_xcpt_ae_inst <= valid_1 ? elts_1_xcpt_ae_inst : io_enq_bits_xcpt_ae_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
      elts_0_replay <= valid_1 ? elts_1_replay : io_enq_bits_replay;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
    end
    if (io_deq_ready ? valid_2 | _valid_4_T_4 & valid_1 : _valid_4_T_4 & valid_0 & ~valid_1) begin	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :29:10, :30:{28,43}, :31:{43,46}, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      elts_1_pc <= valid_2 ? elts_2_pc : io_enq_bits_pc;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
      elts_1_data <= valid_2 ? elts_2_data : io_enq_bits_data;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
      elts_1_xcpt_pf_inst <= valid_2 ? elts_2_xcpt_pf_inst : io_enq_bits_xcpt_pf_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
      elts_1_xcpt_gf_inst <= valid_2 & elts_2_xcpt_gf_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
      elts_1_xcpt_ae_inst <= valid_2 ? elts_2_xcpt_ae_inst : io_enq_bits_xcpt_ae_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
      elts_1_replay <= valid_2 ? elts_2_replay : io_enq_bits_replay;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
    end
    if (io_deq_ready ? valid_3 | _valid_4_T_4 & valid_2 : _valid_4_T_4 & valid_1 & ~valid_2) begin	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :29:10, :30:{28,43}, :31:{43,46}, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      elts_2_pc <= valid_3 ? elts_3_pc : io_enq_bits_pc;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
      elts_2_data <= valid_3 ? elts_3_data : io_enq_bits_data;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
      elts_2_xcpt_pf_inst <= valid_3 ? elts_3_xcpt_pf_inst : io_enq_bits_xcpt_pf_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
      elts_2_xcpt_gf_inst <= valid_3 & elts_3_xcpt_gf_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
      elts_2_xcpt_ae_inst <= valid_3 ? elts_3_xcpt_ae_inst : io_enq_bits_xcpt_ae_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
      elts_2_replay <= valid_3 ? elts_3_replay : io_enq_bits_replay;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
    end
    if (io_deq_ready ? valid_4 | _valid_4_T_4 & valid_3 : _valid_4_T_4 & valid_2 & ~valid_3) begin	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :29:10, :30:{28,43}, :31:{43,46}, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      elts_3_pc <= valid_4 ? elts_4_pc : io_enq_bits_pc;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
      elts_3_data <= valid_4 ? elts_4_data : io_enq_bits_data;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
      elts_3_xcpt_pf_inst <= valid_4 ? elts_4_xcpt_pf_inst : io_enq_bits_xcpt_pf_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
      elts_3_xcpt_gf_inst <= valid_4 & elts_4_xcpt_gf_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
      elts_3_xcpt_ae_inst <= valid_4 ? elts_4_xcpt_ae_inst : io_enq_bits_xcpt_ae_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
      elts_3_replay <= valid_4 ? elts_4_replay : io_enq_bits_replay;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :27:57]
    end
    if (wen_4) begin	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:29:10]
      elts_4_pc <= io_enq_bits_pc;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
      elts_4_data <= io_enq_bits_data;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
      elts_4_xcpt_pf_inst <= io_enq_bits_xcpt_pf_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
      elts_4_xcpt_ae_inst <= io_enq_bits_xcpt_ae_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
      elts_4_replay <= io_enq_bits_replay;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
    end
    elts_4_xcpt_gf_inst <= ~wen_4 & elts_4_xcpt_gf_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25, :29:10, :32:{16,26}]
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:19];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [4:0] i = 5'h0; i < 5'h14; i += 5'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        valid_0 = _RANDOM[5'h0][0];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30]
        valid_1 = _RANDOM[5'h0][1];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30]
        valid_2 = _RANDOM[5'h0][2];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30]
        valid_3 = _RANDOM[5'h0][3];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30]
        valid_4 = _RANDOM[5'h0][4];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30]
        elts_0_pc = {_RANDOM[5'h1][31:22], _RANDOM[5'h2][23:0]};	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_0_data = {_RANDOM[5'h2][31:24], _RANDOM[5'h3][23:0]};	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_0_xcpt_pf_inst = _RANDOM[5'h3][26];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_0_xcpt_gf_inst = _RANDOM[5'h3][27];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_0_xcpt_ae_inst = _RANDOM[5'h3][28];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_0_replay = _RANDOM[5'h3][29];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_1_pc = {_RANDOM[5'h5][31:15], _RANDOM[5'h6][16:0]};	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_1_data = {_RANDOM[5'h6][31:17], _RANDOM[5'h7][16:0]};	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_1_xcpt_pf_inst = _RANDOM[5'h7][19];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_1_xcpt_gf_inst = _RANDOM[5'h7][20];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_1_xcpt_ae_inst = _RANDOM[5'h7][21];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_1_replay = _RANDOM[5'h7][22];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_2_pc = {_RANDOM[5'h9][31:8], _RANDOM[5'hA][9:0]};	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_2_data = {_RANDOM[5'hA][31:10], _RANDOM[5'hB][9:0]};	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_2_xcpt_pf_inst = _RANDOM[5'hB][12];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_2_xcpt_gf_inst = _RANDOM[5'hB][13];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_2_xcpt_ae_inst = _RANDOM[5'hB][14];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_2_replay = _RANDOM[5'hB][15];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_3_pc = {_RANDOM[5'hD][31:1], _RANDOM[5'hE][2:0]};	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_3_data = {_RANDOM[5'hE][31:3], _RANDOM[5'hF][2:0]};	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_3_xcpt_pf_inst = _RANDOM[5'hF][5];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_3_xcpt_gf_inst = _RANDOM[5'hF][6];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_3_xcpt_ae_inst = _RANDOM[5'hF][7];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_3_replay = _RANDOM[5'hF][8];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_4_pc = {_RANDOM[5'h10][31:26], _RANDOM[5'h11][27:0]};	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_4_data = {_RANDOM[5'h11][31:28], _RANDOM[5'h12][27:0]};	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_4_xcpt_pf_inst = _RANDOM[5'h12][30];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_4_xcpt_gf_inst = _RANDOM[5'h12][31];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_4_xcpt_ae_inst = _RANDOM[5'h13][0];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
        elts_4_replay = _RANDOM[5'h13][1];	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:22:25]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_enq_ready = ~valid_4;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :31:46]
  assign io_deq_valid = io_enq_valid | valid_0;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :41:16, :45:{25,40}]
  assign io_deq_bits_pc = valid_0 ? elts_0_pc : io_enq_bits_pc;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :42:15, :46:{22,36}]
  assign io_deq_bits_data = valid_0 ? elts_0_data : io_enq_bits_data;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :42:15, :46:{22,36}]
  assign io_deq_bits_xcpt_pf_inst = valid_0 ? elts_0_xcpt_pf_inst : io_enq_bits_xcpt_pf_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :42:15, :46:{22,36}]
  assign io_deq_bits_xcpt_gf_inst = valid_0 & elts_0_xcpt_gf_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :42:15, :46:{22,36}]
  assign io_deq_bits_xcpt_ae_inst = valid_0 ? elts_0_xcpt_ae_inst : io_enq_bits_xcpt_ae_inst;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :42:15, :46:{22,36}]
  assign io_deq_bits_replay = valid_0 ? elts_0_replay : io_enq_bits_replay;	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :22:25, :42:15, :46:{22,36}]
  assign io_mask = {valid_4, valid_3, valid_2, valid_1, valid_0};	// @[generators/rocket-chip/src/main/scala/util/ShiftQueue.scala:21:30, :53:20]
endmodule

