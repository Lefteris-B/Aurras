// Generated by CIRCT firtool-1.61.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module Pipeline_13(
  input         clock,
                reset,
  output        io_in_ready,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
  input         io_in_valid,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
  input  [6:0]  io_in_bits_cmd_inst_funct,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
  input  [63:0] io_in_bits_cmd_rs1,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
                io_in_bits_cmd_rs2,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
  input  [51:0] io_in_bits_a_addr,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
  input  [67:0] io_in_bits_b_addr,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
                io_in_bits_c_addr,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
  input  [16:0] io_in_bits_I,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
  input  [15:0] io_in_bits_J,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
  input  [31:0] io_in_bits_K,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
  input         io_in_bits_new_weights,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
                io_out_ready,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
  output        io_out_valid,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
  output [6:0]  io_out_bits_cmd_inst_funct,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
  output [63:0] io_out_bits_cmd_rs1,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
                io_out_bits_cmd_rs2,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
  output [51:0] io_out_bits_a_addr,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
  output [67:0] io_out_bits_b_addr,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
                io_out_bits_c_addr,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
  output [16:0] io_out_bits_I,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
  output [15:0] io_out_bits_J,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
  output [31:0] io_out_bits_K,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
  output        io_out_bits_new_weights,	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
                io_busy	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14]
);

  reg  [6:0]  stages_0_cmd_inst_funct;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  reg  [63:0] stages_0_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  reg  [63:0] stages_0_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  reg  [51:0] stages_0_a_addr;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  reg  [67:0] stages_0_b_addr;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  reg  [67:0] stages_0_c_addr;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  reg  [16:0] stages_0_I;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  reg  [15:0] stages_0_J;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  reg  [31:0] stages_0_K;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  reg         stages_0_new_weights;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  reg  [6:0]  stages_1_cmd_inst_funct;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  reg  [63:0] stages_1_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  reg  [63:0] stages_1_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  reg  [51:0] stages_1_a_addr;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  reg  [67:0] stages_1_b_addr;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  reg  [67:0] stages_1_c_addr;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  reg  [16:0] stages_1_I;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  reg  [15:0] stages_1_J;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  reg  [31:0] stages_1_K;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  reg         stages_1_new_weights;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  reg         valids_0;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:22:25]
  reg         valids_1;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:22:25]
  wire        stalling_1 = valids_1 & ~io_out_ready;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:22:25, :28:{34,37}]
  wire        stalling_0 = valids_0 & stalling_1;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:22:25, :28:34, :30:16]
  wire        _GEN = ~stalling_0 & io_in_valid;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:27:20, :30:16, src/main/scala/chisel3/util/Decoupled.scala:52:35]
  always @(posedge clock) begin
    if (_GEN) begin	// @[src/main/scala/chisel3/util/Decoupled.scala:52:35]
      stages_0_cmd_inst_funct <= io_in_bits_cmd_inst_funct;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
      stages_0_cmd_rs1 <= io_in_bits_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
      stages_0_cmd_rs2 <= io_in_bits_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
      stages_0_a_addr <= io_in_bits_a_addr;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
      stages_0_b_addr <= io_in_bits_b_addr;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
      stages_0_c_addr <= io_in_bits_c_addr;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
      stages_0_I <= io_in_bits_I;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
      stages_0_J <= io_in_bits_J;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
      stages_0_K <= io_in_bits_K;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
      stages_0_new_weights <= io_in_bits_new_weights;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
    end
    if (~stalling_1) begin	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:28:34]
      stages_1_cmd_inst_funct <= stages_0_cmd_inst_funct;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
      stages_1_cmd_rs1 <= stages_0_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
      stages_1_cmd_rs2 <= stages_0_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
      stages_1_a_addr <= stages_0_a_addr;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
      stages_1_b_addr <= stages_0_b_addr;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
      stages_1_c_addr <= stages_0_c_addr;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
      stages_1_I <= stages_0_I;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
      stages_1_J <= stages_0_J;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
      stages_1_K <= stages_0_K;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
      stages_1_new_weights <= stages_0_new_weights;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
    end
    if (reset) begin
      valids_0 <= 1'h0;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14, :22:25]
      valids_1 <= 1'h0;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:7:14, :22:25]
    end
    else begin
      valids_0 <= _GEN | stalling_1 & valids_0;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:22:25, :28:34, :40:17, :41:12, :45:22, :46:19, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      valids_1 <= valids_0 | ~io_out_ready & valids_1;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:22:25, :36:24, :37:19, :49:16, :50:12]
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:32];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [5:0] i = 6'h0; i < 6'h21; i += 6'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        stages_0_cmd_inst_funct = _RANDOM[6'h0][6:0];	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
        stages_0_cmd_rs1 = {_RANDOM[6'h1], _RANDOM[6'h2]};	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
        stages_0_cmd_rs2 = {_RANDOM[6'h3], _RANDOM[6'h4]};	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
        stages_0_a_addr = {_RANDOM[6'h8][31:9], _RANDOM[6'h9][28:0]};	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
        stages_0_b_addr = {_RANDOM[6'h9][31:29], _RANDOM[6'hA], _RANDOM[6'hB], _RANDOM[6'hC][0]};	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
        stages_0_c_addr = {_RANDOM[6'hC][31:1], _RANDOM[6'hD], _RANDOM[6'hE][4:0]};	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
        stages_0_I = _RANDOM[6'hE][21:5];	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
        stages_0_J = {_RANDOM[6'hE][31:22], _RANDOM[6'hF][5:0]};	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
        stages_0_K = {_RANDOM[6'hF][31:6], _RANDOM[6'h10][5:0]};	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
        stages_0_new_weights = _RANDOM[6'h10][6];	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
        stages_1_cmd_inst_funct = _RANDOM[6'h10][13:7];	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
        stages_1_cmd_rs1 = {_RANDOM[6'h11][31:7], _RANDOM[6'h12], _RANDOM[6'h13][6:0]};	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
        stages_1_cmd_rs2 = {_RANDOM[6'h13][31:7], _RANDOM[6'h14], _RANDOM[6'h15][6:0]};	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
        stages_1_a_addr = {_RANDOM[6'h18][31:16], _RANDOM[6'h19], _RANDOM[6'h1A][3:0]};	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
        stages_1_b_addr = {_RANDOM[6'h1A][31:4], _RANDOM[6'h1B], _RANDOM[6'h1C][7:0]};	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
        stages_1_c_addr = {_RANDOM[6'h1C][31:8], _RANDOM[6'h1D], _RANDOM[6'h1E][11:0]};	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
        stages_1_I = _RANDOM[6'h1E][28:12];	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
        stages_1_J = {_RANDOM[6'h1E][31:29], _RANDOM[6'h1F][12:0]};	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
        stages_1_K = {_RANDOM[6'h1F][31:13], _RANDOM[6'h20][12:0]};	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
        stages_1_new_weights = _RANDOM[6'h20][13];	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
        valids_0 = _RANDOM[6'h20][14];	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21, :22:25]
        valids_1 = _RANDOM[6'h20][15];	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21, :22:25]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_in_ready = ~stalling_0;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:27:20, :30:16]
  assign io_out_valid = valids_1;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:22:25]
  assign io_out_bits_cmd_inst_funct = stages_1_cmd_inst_funct;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  assign io_out_bits_cmd_rs1 = stages_1_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  assign io_out_bits_cmd_rs2 = stages_1_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  assign io_out_bits_a_addr = stages_1_a_addr;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  assign io_out_bits_b_addr = stages_1_b_addr;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  assign io_out_bits_c_addr = stages_1_c_addr;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  assign io_out_bits_I = stages_1_I;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  assign io_out_bits_J = stages_1_J;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  assign io_out_bits_K = stages_1_K;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  assign io_out_bits_new_weights = stages_1_new_weights;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:21:21]
  assign io_busy = io_in_valid | valids_0 | valids_1;	// @[generators/gemmini/src/main/scala/gemmini/Pipeline.scala:22:25, :24:28]
endmodule

