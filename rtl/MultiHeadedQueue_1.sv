// Generated by CIRCT firtool-1.61.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module MultiHeadedQueue_1(
  input         clock,
                reset,
  output        io_enq_ready,	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
  input         io_enq_valid,	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
  input  [6:0]  io_enq_bits_cmd_inst_funct,	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
  input  [63:0] io_enq_bits_cmd_rs1,	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
                io_enq_bits_cmd_rs2,	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
  input         io_enq_bits_rob_id_valid,	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
  input  [5:0]  io_enq_bits_rob_id_bits,	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
  output        io_deq_valid_0,	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
                io_deq_valid_1,	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
                io_deq_valid_2,	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
  output [6:0]  io_deq_bits_0_cmd_inst_funct,	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
  output [63:0] io_deq_bits_0_cmd_rs1,	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
                io_deq_bits_0_cmd_rs2,	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
  output        io_deq_bits_0_rob_id_valid,	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
  output [5:0]  io_deq_bits_0_rob_id_bits,	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
  output [6:0]  io_deq_bits_1_cmd_inst_funct,	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
  output [63:0] io_deq_bits_1_cmd_rs1,	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
                io_deq_bits_1_cmd_rs2,	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
  output        io_deq_bits_1_rob_id_valid,	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
  output [5:0]  io_deq_bits_1_rob_id_bits,	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
  output [63:0] io_deq_bits_2_cmd_rs1,	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
                io_deq_bits_2_cmd_rs2,	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
  output [5:0]  io_deq_bits_2_rob_id_bits,	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
  input  [1:0]  io_deq_pop	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:8:14]
);

  reg  [6:0]       regs_0_cmd_inst_funct;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [63:0]      regs_0_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [63:0]      regs_0_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg              regs_0_rob_id_valid;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [5:0]       regs_0_rob_id_bits;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [6:0]       regs_1_cmd_inst_funct;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [63:0]      regs_1_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [63:0]      regs_1_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg              regs_1_rob_id_valid;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [5:0]       regs_1_rob_id_bits;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [6:0]       regs_2_cmd_inst_funct;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [63:0]      regs_2_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [63:0]      regs_2_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg              regs_2_rob_id_valid;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [5:0]       regs_2_rob_id_bits;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [6:0]       regs_3_cmd_inst_funct;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [63:0]      regs_3_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [63:0]      regs_3_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg              regs_3_rob_id_valid;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [5:0]       regs_3_rob_id_bits;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [6:0]       regs_4_cmd_inst_funct;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [63:0]      regs_4_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [63:0]      regs_4_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg              regs_4_rob_id_valid;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [5:0]       regs_4_rob_id_bits;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [6:0]       regs_5_cmd_inst_funct;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [63:0]      regs_5_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [63:0]      regs_5_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg              regs_5_rob_id_valid;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [5:0]       regs_5_rob_id_bits;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [6:0]       regs_6_cmd_inst_funct;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [63:0]      regs_6_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [63:0]      regs_6_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg              regs_6_rob_id_valid;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [5:0]       regs_6_rob_id_bits;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [6:0]       regs_7_cmd_inst_funct;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [63:0]      regs_7_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [63:0]      regs_7_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg              regs_7_rob_id_valid;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [5:0]       regs_7_rob_id_bits;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
  reg  [2:0]       raddr;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:23:22]
  reg  [2:0]       waddr;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:24:22]
  reg  [3:0]       len;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:25:20]
  wire [2:0]       _raddr_T_11 = 3'h7 - raddr;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:23:22, generators/gemmini/src/main/scala/gemmini/Util.scala:12:16, :13:57]
  wire [7:0][6:0]  _GEN = {{regs_7_cmd_inst_funct}, {regs_6_cmd_inst_funct}, {regs_5_cmd_inst_funct}, {regs_4_cmd_inst_funct}, {regs_3_cmd_inst_funct}, {regs_2_cmd_inst_funct}, {regs_1_cmd_inst_funct}, {regs_0_cmd_inst_funct}};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17, :32:20]
  wire [7:0][63:0] _GEN_0 = {{regs_7_cmd_rs1}, {regs_6_cmd_rs1}, {regs_5_cmd_rs1}, {regs_4_cmd_rs1}, {regs_3_cmd_rs1}, {regs_2_cmd_rs1}, {regs_1_cmd_rs1}, {regs_0_cmd_rs1}};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17, :32:20]
  wire [7:0][63:0] _GEN_1 = {{regs_7_cmd_rs2}, {regs_6_cmd_rs2}, {regs_5_cmd_rs2}, {regs_4_cmd_rs2}, {regs_3_cmd_rs2}, {regs_2_cmd_rs2}, {regs_1_cmd_rs2}, {regs_0_cmd_rs2}};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17, :32:20]
  wire [7:0]       _GEN_2 = {{regs_7_rob_id_valid}, {regs_6_rob_id_valid}, {regs_5_rob_id_valid}, {regs_4_rob_id_valid}, {regs_3_rob_id_valid}, {regs_2_rob_id_valid}, {regs_1_rob_id_valid}, {regs_0_rob_id_valid}};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17, :32:20]
  wire [7:0][5:0]  _GEN_3 = {{regs_7_rob_id_bits}, {regs_6_rob_id_bits}, {regs_5_rob_id_bits}, {regs_4_rob_id_bits}, {regs_3_rob_id_bits}, {regs_2_rob_id_bits}, {regs_1_rob_id_bits}, {regs_0_rob_id_bits}};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17, :32:20]
  wire [2:0]       _io_deq_bits_1_T_19 = (&raddr) ? 3'h1 - _raddr_T_11 - 3'h1 : raddr + 3'h1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:23:22, :37:17, generators/gemmini/src/main/scala/gemmini/Util.scala:13:{10,13,48,57,62,71}]
  wire [2:0]       _io_deq_bits_2_T_19 = raddr > 3'h5 ? 3'h2 - _raddr_T_11 - 3'h1 : raddr + 3'h2;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:23:22, :37:17, generators/gemmini/src/main/scala/gemmini/Util.scala:13:{10,13,48,57,62,71}]
  wire [3:0]       _GEN_4 = {2'h0, io_deq_pop};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:31:28, generators/gemmini/src/main/scala/gemmini/Util.scala:13:22]
  `ifndef SYNTHESIS	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:48:9]
    always @(posedge clock) begin	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:48:9]
      if (~reset & ~(_GEN_4 <= len & io_deq_pop != 2'h3)) begin	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:25:20, :48:{9,21,53,67}, generators/gemmini/src/main/scala/gemmini/Util.scala:13:22]
        if (`ASSERT_VERBOSE_COND_)	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:48:9]
          $error("Assertion failed\n    at MultiHeadedQueue.scala:48 assert(io.deq.pop <= len && io.deq.pop <= heads.U && io.deq.pop <= maxpop.U)\n");	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:48:9]
        if (`STOP_COND_)	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:48:9]
          $fatal;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:48:9]
      end
    end // always @(posedge)
  `endif // not def SYNTHESIS
  wire [2:0]       _GEN_5 = {1'h0, io_deq_pop};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17, generators/gemmini/src/main/scala/gemmini/Util.scala:13:22]
  wire             _len_T_4 = ~(len[3]) & io_enq_valid;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:25:20, :27:23, src/main/scala/chisel3/util/Decoupled.scala:52:35]
  always @(posedge clock) begin
    if (_len_T_4 & waddr == 3'h0) begin	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17, :23:22, :24:22, :36:22, :37:17, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      regs_0_cmd_inst_funct <= io_enq_bits_cmd_inst_funct;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_0_cmd_rs1 <= io_enq_bits_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_0_cmd_rs2 <= io_enq_bits_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_0_rob_id_valid <= io_enq_bits_rob_id_valid;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_0_rob_id_bits <= io_enq_bits_rob_id_bits;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
    end
    if (_len_T_4 & waddr == 3'h1) begin	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17, :24:22, :36:22, :37:17, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      regs_1_cmd_inst_funct <= io_enq_bits_cmd_inst_funct;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_1_cmd_rs1 <= io_enq_bits_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_1_cmd_rs2 <= io_enq_bits_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_1_rob_id_valid <= io_enq_bits_rob_id_valid;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_1_rob_id_bits <= io_enq_bits_rob_id_bits;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
    end
    if (_len_T_4 & waddr == 3'h2) begin	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17, :24:22, :36:22, :37:17, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      regs_2_cmd_inst_funct <= io_enq_bits_cmd_inst_funct;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_2_cmd_rs1 <= io_enq_bits_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_2_cmd_rs2 <= io_enq_bits_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_2_rob_id_valid <= io_enq_bits_rob_id_valid;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_2_rob_id_bits <= io_enq_bits_rob_id_bits;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
    end
    if (_len_T_4 & waddr == 3'h3) begin	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17, :24:22, :36:22, :37:17, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      regs_3_cmd_inst_funct <= io_enq_bits_cmd_inst_funct;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_3_cmd_rs1 <= io_enq_bits_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_3_cmd_rs2 <= io_enq_bits_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_3_rob_id_valid <= io_enq_bits_rob_id_valid;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_3_rob_id_bits <= io_enq_bits_rob_id_bits;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
    end
    if (_len_T_4 & waddr == 3'h4) begin	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17, :24:22, :36:22, :37:17, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      regs_4_cmd_inst_funct <= io_enq_bits_cmd_inst_funct;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_4_cmd_rs1 <= io_enq_bits_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_4_cmd_rs2 <= io_enq_bits_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_4_rob_id_valid <= io_enq_bits_rob_id_valid;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_4_rob_id_bits <= io_enq_bits_rob_id_bits;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
    end
    if (_len_T_4 & waddr == 3'h5) begin	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17, :24:22, :36:22, :37:17, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      regs_5_cmd_inst_funct <= io_enq_bits_cmd_inst_funct;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_5_cmd_rs1 <= io_enq_bits_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_5_cmd_rs2 <= io_enq_bits_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_5_rob_id_valid <= io_enq_bits_rob_id_valid;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_5_rob_id_bits <= io_enq_bits_rob_id_bits;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
    end
    if (_len_T_4 & waddr == 3'h6) begin	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17, :24:22, :36:22, :37:17, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      regs_6_cmd_inst_funct <= io_enq_bits_cmd_inst_funct;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_6_cmd_rs1 <= io_enq_bits_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_6_cmd_rs2 <= io_enq_bits_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_6_rob_id_valid <= io_enq_bits_rob_id_valid;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_6_rob_id_bits <= io_enq_bits_rob_id_bits;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
    end
    if (_len_T_4 & (&waddr)) begin	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17, :24:22, :36:22, :37:17, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      regs_7_cmd_inst_funct <= io_enq_bits_cmd_inst_funct;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_7_cmd_rs1 <= io_enq_bits_cmd_rs1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_7_cmd_rs2 <= io_enq_bits_cmd_rs2;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_7_rob_id_valid <= io_enq_bits_rob_id_valid;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
      regs_7_rob_id_bits <= io_enq_bits_rob_id_bits;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
    end
    if (reset) begin
      raddr <= 3'h0;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:23:22]
      waddr <= 3'h0;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:23:22, :24:22]
      len <= 4'h0;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:25:20]
    end
    else begin
      if (|io_deq_pop) begin	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:43:19]
        if (raddr >= 3'h7 - _GEN_5 + 3'h1 & (|io_deq_pop))	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:23:22, :37:17, generators/gemmini/src/main/scala/gemmini/Util.scala:12:16, :13:{13,22,26,32,37}]
          raddr <= _GEN_5 - _raddr_T_11 - 3'h1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:23:22, generators/gemmini/src/main/scala/gemmini/Util.scala:13:{22,48,57,62}]
        else	// @[generators/gemmini/src/main/scala/gemmini/Util.scala:13:32]
          raddr <= raddr + _GEN_5;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:23:22, generators/gemmini/src/main/scala/gemmini/Util.scala:13:{22,71}]
        len <= len - _GEN_4 + {3'h0, _len_T_4};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:23:22, :25:20, :45:{16,29}, generators/gemmini/src/main/scala/gemmini/Util.scala:13:22, src/main/scala/chisel3/util/Decoupled.scala:52:35]
      end
      else if (_len_T_4)	// @[src/main/scala/chisel3/util/Decoupled.scala:52:35]
        len <= len + 4'h1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:25:20, :31:28, :39:16]
      if (_len_T_4) begin	// @[src/main/scala/chisel3/util/Decoupled.scala:52:35]
        if (&waddr)	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:24:22, generators/gemmini/src/main/scala/gemmini/Util.scala:13:13]
          waddr <= 3'h1 - (3'h7 - waddr) - 3'h1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:24:22, :37:17, generators/gemmini/src/main/scala/gemmini/Util.scala:12:16, :13:{48,57,62}]
        else	// @[generators/gemmini/src/main/scala/gemmini/Util.scala:13:13]
          waddr <= waddr + 3'h1;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:24:22, :37:17, generators/gemmini/src/main/scala/gemmini/Util.scala:13:71]
      end
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:68];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [6:0] i = 7'h0; i < 7'h45; i += 7'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        regs_0_cmd_inst_funct = _RANDOM[7'h0][6:0];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_0_cmd_rs1 = {_RANDOM[7'h1], _RANDOM[7'h2]};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_0_cmd_rs2 = {_RANDOM[7'h3], _RANDOM[7'h4]};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_0_rob_id_valid = _RANDOM[7'h8][9];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_0_rob_id_bits = _RANDOM[7'h8][15:10];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_1_cmd_inst_funct = _RANDOM[7'h8][24:18];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_1_cmd_rs1 = {_RANDOM[7'h9][31:18], _RANDOM[7'hA], _RANDOM[7'hB][17:0]};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_1_cmd_rs2 = {_RANDOM[7'hB][31:18], _RANDOM[7'hC], _RANDOM[7'hD][17:0]};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_1_rob_id_valid = _RANDOM[7'h10][27];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_1_rob_id_bits = {_RANDOM[7'h10][31:28], _RANDOM[7'h11][1:0]};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_2_cmd_inst_funct = _RANDOM[7'h11][10:4];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_2_cmd_rs1 = {_RANDOM[7'h12][31:4], _RANDOM[7'h13], _RANDOM[7'h14][3:0]};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_2_cmd_rs2 = {_RANDOM[7'h14][31:4], _RANDOM[7'h15], _RANDOM[7'h16][3:0]};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_2_rob_id_valid = _RANDOM[7'h19][13];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_2_rob_id_bits = _RANDOM[7'h19][19:14];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_3_cmd_inst_funct = _RANDOM[7'h19][28:22];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_3_cmd_rs1 = {_RANDOM[7'h1A][31:22], _RANDOM[7'h1B], _RANDOM[7'h1C][21:0]};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_3_cmd_rs2 = {_RANDOM[7'h1C][31:22], _RANDOM[7'h1D], _RANDOM[7'h1E][21:0]};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_3_rob_id_valid = _RANDOM[7'h21][31];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_3_rob_id_bits = _RANDOM[7'h22][5:0];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_4_cmd_inst_funct = _RANDOM[7'h22][14:8];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_4_cmd_rs1 = {_RANDOM[7'h23][31:8], _RANDOM[7'h24], _RANDOM[7'h25][7:0]};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_4_cmd_rs2 = {_RANDOM[7'h25][31:8], _RANDOM[7'h26], _RANDOM[7'h27][7:0]};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_4_rob_id_valid = _RANDOM[7'h2A][17];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_4_rob_id_bits = _RANDOM[7'h2A][23:18];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_5_cmd_inst_funct = {_RANDOM[7'h2A][31:26], _RANDOM[7'h2B][0]};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_5_cmd_rs1 = {_RANDOM[7'h2B][31:26], _RANDOM[7'h2C], _RANDOM[7'h2D][25:0]};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_5_cmd_rs2 = {_RANDOM[7'h2D][31:26], _RANDOM[7'h2E], _RANDOM[7'h2F][25:0]};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_5_rob_id_valid = _RANDOM[7'h33][3];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_5_rob_id_bits = _RANDOM[7'h33][9:4];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_6_cmd_inst_funct = _RANDOM[7'h33][18:12];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_6_cmd_rs1 = {_RANDOM[7'h34][31:12], _RANDOM[7'h35], _RANDOM[7'h36][11:0]};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_6_cmd_rs2 = {_RANDOM[7'h36][31:12], _RANDOM[7'h37], _RANDOM[7'h38][11:0]};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_6_rob_id_valid = _RANDOM[7'h3B][21];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_6_rob_id_bits = _RANDOM[7'h3B][27:22];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_7_cmd_inst_funct = {_RANDOM[7'h3B][31:30], _RANDOM[7'h3C][4:0]};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_7_cmd_rs1 = {_RANDOM[7'h3C][31:30], _RANDOM[7'h3D], _RANDOM[7'h3E][29:0]};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_7_cmd_rs2 = {_RANDOM[7'h3E][31:30], _RANDOM[7'h3F], _RANDOM[7'h40][29:0]};	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_7_rob_id_valid = _RANDOM[7'h44][7];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        regs_7_rob_id_bits = _RANDOM[7'h44][13:8];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17]
        raddr = _RANDOM[7'h44][18:16];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17, :23:22]
        waddr = _RANDOM[7'h44][21:19];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17, :24:22]
        len = _RANDOM[7'h44][25:22];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:22:17, :25:20]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_enq_ready = ~(len[3]);	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:25:20, :27:23]
  assign io_deq_valid_0 = |len;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:25:20, :31:28]
  assign io_deq_valid_1 = |(len[3:1]);	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:25:20, :31:28]
  assign io_deq_valid_2 = len > 4'h2;	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:25:20, :31:28]
  assign io_deq_bits_0_cmd_inst_funct = _GEN[raddr];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:23:22, :32:20]
  assign io_deq_bits_0_cmd_rs1 = _GEN_0[raddr];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:23:22, :32:20]
  assign io_deq_bits_0_cmd_rs2 = _GEN_1[raddr];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:23:22, :32:20]
  assign io_deq_bits_0_rob_id_valid = _GEN_2[raddr];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:23:22, :32:20]
  assign io_deq_bits_0_rob_id_bits = _GEN_3[raddr];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:23:22, :32:20]
  assign io_deq_bits_1_cmd_inst_funct = _GEN[_io_deq_bits_1_T_19];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:32:20, generators/gemmini/src/main/scala/gemmini/Util.scala:13:10]
  assign io_deq_bits_1_cmd_rs1 = _GEN_0[_io_deq_bits_1_T_19];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:32:20, generators/gemmini/src/main/scala/gemmini/Util.scala:13:10]
  assign io_deq_bits_1_cmd_rs2 = _GEN_1[_io_deq_bits_1_T_19];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:32:20, generators/gemmini/src/main/scala/gemmini/Util.scala:13:10]
  assign io_deq_bits_1_rob_id_valid = _GEN_2[_io_deq_bits_1_T_19];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:32:20, generators/gemmini/src/main/scala/gemmini/Util.scala:13:10]
  assign io_deq_bits_1_rob_id_bits = _GEN_3[_io_deq_bits_1_T_19];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:32:20, generators/gemmini/src/main/scala/gemmini/Util.scala:13:10]
  assign io_deq_bits_2_cmd_rs1 = _GEN_0[_io_deq_bits_2_T_19];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:32:20, generators/gemmini/src/main/scala/gemmini/Util.scala:13:10]
  assign io_deq_bits_2_cmd_rs2 = _GEN_1[_io_deq_bits_2_T_19];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:32:20, generators/gemmini/src/main/scala/gemmini/Util.scala:13:10]
  assign io_deq_bits_2_rob_id_bits = _GEN_3[_io_deq_bits_2_T_19];	// @[generators/gemmini/src/main/scala/gemmini/MultiHeadedQueue.scala:32:20, generators/gemmini/src/main/scala/gemmini/Util.scala:13:10]
endmodule

