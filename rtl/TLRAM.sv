// Generated by CIRCT firtool-1.61.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module TLRAM(
  input         clock,
                reset,
  output        auto_in_a_ready,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  input         auto_in_a_valid,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  input  [2:0]  auto_in_a_bits_opcode,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  input  [1:0]  auto_in_a_bits_size,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  input  [6:0]  auto_in_a_bits_source,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  input  [27:0] auto_in_a_bits_address,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  input  [7:0]  auto_in_a_bits_mask,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  input  [63:0] auto_in_a_bits_data,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  input         auto_in_d_ready,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  output        auto_in_d_valid,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  output [2:0]  auto_in_d_bits_opcode,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  output [1:0]  auto_in_d_bits_size,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  output [6:0]  auto_in_d_bits_source,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  output [63:0] auto_in_d_bits_data	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
);

  wire [7:0]  r_raw_data_7;	// @[generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  wire [7:0]  r_raw_data_6;	// @[generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  wire [7:0]  r_raw_data_5;	// @[generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  wire [7:0]  r_raw_data_4;	// @[generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  wire [7:0]  r_raw_data_3;	// @[generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  wire [7:0]  r_raw_data_2;	// @[generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  wire [7:0]  r_raw_data_1;	// @[generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  wire [7:0]  r_raw_data_0;	// @[generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  wire        mem_MPORT_en;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:297:20]
  wire        mem_MPORT_1_en;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:296:52]
  wire [63:0] _mem_RW0_rdata;	// @[generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26]
  reg         r_full;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:121:30]
  reg  [1:0]  r_size;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:124:26]
  reg  [6:0]  r_source;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:125:26]
  reg         r_read;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:126:26]
  wire        nodeIn_a_ready = ~r_full | auto_in_d_ready;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:121:30, :230:{41,49}]
  wire        a_ren = auto_in_a_bits_opcode == 3'h4;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:238:35]
  wire        a_fire = nodeIn_a_ready & auto_in_a_valid;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:230:49, src/main/scala/chisel3/util/Decoupled.scala:52:35]
  assign mem_MPORT_1_en = a_fire & ~a_ren;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:238:35, :296:{52,55}, src/main/scala/chisel3/util/Decoupled.scala:52:35]
  assign mem_MPORT_en = ~mem_MPORT_1_en & a_fire;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:296:52, :297:{15,20}, src/main/scala/chisel3/util/Decoupled.scala:52:35]
  reg         REG;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:308:58]
  reg  [7:0]  r_0;	// @[generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  reg  [7:0]  r_1;	// @[generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  reg  [7:0]  r_2;	// @[generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  reg  [7:0]  r_3;	// @[generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  reg  [7:0]  r_4;	// @[generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  reg  [7:0]  r_5;	// @[generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  reg  [7:0]  r_6;	// @[generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  reg  [7:0]  r_7;	// @[generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  assign r_raw_data_0 = REG ? _mem_RW0_rdata[7:0] : r_0;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:308:58, generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26, generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  assign r_raw_data_1 = REG ? _mem_RW0_rdata[15:8] : r_1;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:308:58, generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26, generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  assign r_raw_data_2 = REG ? _mem_RW0_rdata[23:16] : r_2;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:308:58, generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26, generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  assign r_raw_data_3 = REG ? _mem_RW0_rdata[31:24] : r_3;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:308:58, generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26, generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  assign r_raw_data_4 = REG ? _mem_RW0_rdata[39:32] : r_4;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:308:58, generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26, generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  assign r_raw_data_5 = REG ? _mem_RW0_rdata[47:40] : r_5;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:308:58, generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26, generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  assign r_raw_data_6 = REG ? _mem_RW0_rdata[55:48] : r_6;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:308:58, generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26, generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  assign r_raw_data_7 = REG ? _mem_RW0_rdata[63:56] : r_7;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:308:58, generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26, generators/rocket-chip/src/main/scala/util/package.scala:80:63]
  always @(posedge clock) begin
    if (reset)
      r_full <= 1'h0;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:121:30]
    else
      r_full <= a_fire | ~auto_in_d_ready & r_full;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:121:30, :260:{20,29}, :261:22, :262:18, src/main/scala/chisel3/util/Decoupled.scala:52:35]
    if (a_fire) begin	// @[src/main/scala/chisel3/util/Decoupled.scala:52:35]
      r_size <= auto_in_a_bits_size;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:124:26]
      r_source <= auto_in_a_bits_source;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:125:26]
      r_read <= a_ren;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:126:26, :238:35]
    end
    REG <= mem_MPORT_en;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:297:20, :308:58]
    if (REG) begin	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:308:58]
      r_0 <= _mem_RW0_rdata[7:0];	// @[generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26, generators/rocket-chip/src/main/scala/util/package.scala:80:63]
      r_1 <= _mem_RW0_rdata[15:8];	// @[generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26, generators/rocket-chip/src/main/scala/util/package.scala:80:63]
      r_2 <= _mem_RW0_rdata[23:16];	// @[generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26, generators/rocket-chip/src/main/scala/util/package.scala:80:63]
      r_3 <= _mem_RW0_rdata[31:24];	// @[generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26, generators/rocket-chip/src/main/scala/util/package.scala:80:63]
      r_4 <= _mem_RW0_rdata[39:32];	// @[generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26, generators/rocket-chip/src/main/scala/util/package.scala:80:63]
      r_5 <= _mem_RW0_rdata[47:40];	// @[generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26, generators/rocket-chip/src/main/scala/util/package.scala:80:63]
      r_6 <= _mem_RW0_rdata[55:48];	// @[generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26, generators/rocket-chip/src/main/scala/util/package.scala:80:63]
      r_7 <= _mem_RW0_rdata[63:56];	// @[generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26, generators/rocket-chip/src/main/scala/util/package.scala:80:63]
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:11];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [3:0] i = 4'h0; i < 4'hC; i += 4'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        r_full = _RANDOM[4'h5][25];	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:121:30]
        r_size = _RANDOM[4'h6][1:0];	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:124:26]
        r_source = _RANDOM[4'h6][8:2];	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:124:26, :125:26]
        r_read = _RANDOM[4'h6][9];	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:124:26, :126:26]
        REG = _RANDOM[4'h9][18];	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:308:58]
        r_0 = _RANDOM[4'h9][26:19];	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:308:58, generators/rocket-chip/src/main/scala/util/package.scala:80:63]
        r_1 = {_RANDOM[4'h9][31:27], _RANDOM[4'hA][2:0]};	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:308:58, generators/rocket-chip/src/main/scala/util/package.scala:80:63]
        r_2 = _RANDOM[4'hA][10:3];	// @[generators/rocket-chip/src/main/scala/util/package.scala:80:63]
        r_3 = _RANDOM[4'hA][18:11];	// @[generators/rocket-chip/src/main/scala/util/package.scala:80:63]
        r_4 = _RANDOM[4'hA][26:19];	// @[generators/rocket-chip/src/main/scala/util/package.scala:80:63]
        r_5 = {_RANDOM[4'hA][31:27], _RANDOM[4'hB][2:0]};	// @[generators/rocket-chip/src/main/scala/util/package.scala:80:63]
        r_6 = _RANDOM[4'hB][10:3];	// @[generators/rocket-chip/src/main/scala/util/package.scala:80:63]
        r_7 = _RANDOM[4'hB][18:11];	// @[generators/rocket-chip/src/main/scala/util/package.scala:80:63]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  mem_1 mem (	// @[generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26]
    .RW0_addr  (auto_in_a_bits_address[15:3]),	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:307:20]
    .RW0_en    (mem_MPORT_en | mem_MPORT_1_en),	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:296:52, :297:20, generators/rocket-chip/src/main/scala/util/DescribedSRAM.scala:17:26]
    .RW0_clk   (clock),
    .RW0_wmode (mem_MPORT_1_en),	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:296:52]
    .RW0_wdata (auto_in_a_bits_data),
    .RW0_rdata (_mem_RW0_rdata),
    .RW0_wmask (auto_in_a_bits_mask)
  );
  assign auto_in_a_ready = nodeIn_a_ready;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:230:49]
  assign auto_in_d_valid = r_full;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:121:30]
  assign auto_in_d_bits_opcode = {2'h0, r_read};	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:126:26, :196:23]
  assign auto_in_d_bits_size = r_size;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:124:26]
  assign auto_in_d_bits_source = r_source;	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:125:26]
  assign auto_in_d_bits_data = {r_raw_data_7, r_raw_data_6, r_raw_data_5, r_raw_data_4, r_raw_data_3, r_raw_data_2, r_raw_data_1, r_raw_data_0};	// @[generators/rocket-chip/src/main/scala/tilelink/SRAM.scala:148:30, generators/rocket-chip/src/main/scala/util/package.scala:80:63]
endmodule

