// Generated by CIRCT firtool-1.61.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module Queue_67(
  input         clock,
                reset,
  output        io_enq_ready,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
  input         io_enq_valid,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
  input  [31:0] io_enq_bits_data_0_0,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
                io_enq_bits_data_1_0,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
                io_enq_bits_data_2_0,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
                io_enq_bits_data_3_0,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
                io_enq_bits_data_4_0,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
                io_enq_bits_data_5_0,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
                io_enq_bits_data_6_0,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
                io_enq_bits_data_7_0,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
  input         io_enq_bits_fromDMA,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
  input  [31:0] io_enq_bits_scale_bits,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
                io_enq_bits_igelu_qb,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
                io_enq_bits_igelu_qc,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
                io_enq_bits_iexp_qln2,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
                io_enq_bits_iexp_qln2_inv,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
  input  [2:0]  io_enq_bits_act,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
  input         io_deq_ready,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
  output        io_deq_valid,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
  output [31:0] io_deq_bits_data_0_0,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
                io_deq_bits_data_1_0,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
                io_deq_bits_data_2_0,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
                io_deq_bits_data_3_0,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
                io_deq_bits_data_4_0,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
                io_deq_bits_data_5_0,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
                io_deq_bits_data_6_0,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
                io_deq_bits_data_7_0,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
  output        io_deq_bits_fromDMA,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
  output [31:0] io_deq_bits_scale_bits,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
                io_deq_bits_igelu_qb,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
                io_deq_bits_igelu_qc,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
                io_deq_bits_iexp_qln2,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
                io_deq_bits_iexp_qln2_inv,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
  output [2:0]  io_deq_bits_act,	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
  output        io_count	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14]
);

  wire         _io_enq_ready_output;	// @[src/main/scala/chisel3/util/Decoupled.scala:304:16, :324:{24,39}]
  reg  [421:0] ram;	// @[src/main/scala/chisel3/util/Decoupled.scala:274:95]
  reg          full;	// @[src/main/scala/chisel3/util/Decoupled.scala:277:27]
  wire         _io_deq_valid_output = io_enq_valid | full;	// @[src/main/scala/chisel3/util/Decoupled.scala:277:27, :303:16, :315:{24,39}]
  wire         do_enq = ~(~full & io_deq_ready) & _io_enq_ready_output & io_enq_valid;	// @[src/main/scala/chisel3/util/Decoupled.scala:277:27, :279:28, :281:27, :304:16, :316:17, :319:{26,35}, :324:{24,39}]
  assign _io_enq_ready_output = io_deq_ready | ~full;	// @[src/main/scala/chisel3/util/Decoupled.scala:277:27, :304:{16,19}, :324:{24,39}]
  always @(posedge clock) begin
    if (do_enq)	// @[src/main/scala/chisel3/util/Decoupled.scala:281:27, :316:17, :319:{26,35}]
      ram <= {2'h0, io_enq_bits_act, io_enq_bits_iexp_qln2_inv, io_enq_bits_iexp_qln2, io_enq_bits_igelu_qc, io_enq_bits_igelu_qb, io_enq_bits_scale_bits, io_enq_bits_fromDMA, io_enq_bits_data_7_0, io_enq_bits_data_6_0, io_enq_bits_data_5_0, io_enq_bits_data_4_0, io_enq_bits_data_3_0, io_enq_bits_data_2_0, io_enq_bits_data_1_0, io_enq_bits_data_0_0};	// @[src/main/scala/chisel3/util/Decoupled.scala:273:14, :274:95]
    if (reset)
      full <= 1'h0;	// @[src/main/scala/chisel3/util/Decoupled.scala:277:27]
    else if (~(do_enq == (full & io_deq_ready & _io_deq_valid_output)))	// @[src/main/scala/chisel3/util/Decoupled.scala:277:27, :281:27, :282:27, :294:{15,27}, :295:16, :303:16, :315:{24,39}, :316:17, :318:14, :319:{26,35}]
      full <= do_enq;	// @[src/main/scala/chisel3/util/Decoupled.scala:277:27, :281:27, :316:17, :319:{26,35}]
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:13];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [3:0] i = 4'h0; i < 4'hE; i += 4'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        ram = {_RANDOM[4'h0][31:1], _RANDOM[4'h1], _RANDOM[4'h2], _RANDOM[4'h3], _RANDOM[4'h4], _RANDOM[4'h5], _RANDOM[4'h6], _RANDOM[4'h7], _RANDOM[4'h8], _RANDOM[4'h9], _RANDOM[4'hA], _RANDOM[4'hB], _RANDOM[4'hC], _RANDOM[4'hD][6:0]};	// @[src/main/scala/chisel3/util/Decoupled.scala:274:95]
        full = _RANDOM[4'h0][0];	// @[src/main/scala/chisel3/util/Decoupled.scala:274:95, :277:27]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_enq_ready = _io_enq_ready_output;	// @[src/main/scala/chisel3/util/Decoupled.scala:304:16, :324:{24,39}]
  assign io_deq_valid = _io_deq_valid_output;	// @[src/main/scala/chisel3/util/Decoupled.scala:303:16, :315:{24,39}]
  assign io_deq_bits_data_0_0 = full ? ram[31:0] : io_enq_bits_data_0_0;	// @[src/main/scala/chisel3/util/Decoupled.scala:274:95, :277:27, :311:17, :316:17, :317:19]
  assign io_deq_bits_data_1_0 = full ? ram[63:32] : io_enq_bits_data_1_0;	// @[src/main/scala/chisel3/util/Decoupled.scala:274:95, :277:27, :311:17, :316:17, :317:19]
  assign io_deq_bits_data_2_0 = full ? ram[95:64] : io_enq_bits_data_2_0;	// @[src/main/scala/chisel3/util/Decoupled.scala:274:95, :277:27, :311:17, :316:17, :317:19]
  assign io_deq_bits_data_3_0 = full ? ram[127:96] : io_enq_bits_data_3_0;	// @[src/main/scala/chisel3/util/Decoupled.scala:274:95, :277:27, :311:17, :316:17, :317:19]
  assign io_deq_bits_data_4_0 = full ? ram[159:128] : io_enq_bits_data_4_0;	// @[src/main/scala/chisel3/util/Decoupled.scala:274:95, :277:27, :311:17, :316:17, :317:19]
  assign io_deq_bits_data_5_0 = full ? ram[191:160] : io_enq_bits_data_5_0;	// @[src/main/scala/chisel3/util/Decoupled.scala:274:95, :277:27, :311:17, :316:17, :317:19]
  assign io_deq_bits_data_6_0 = full ? ram[223:192] : io_enq_bits_data_6_0;	// @[src/main/scala/chisel3/util/Decoupled.scala:274:95, :277:27, :311:17, :316:17, :317:19]
  assign io_deq_bits_data_7_0 = full ? ram[255:224] : io_enq_bits_data_7_0;	// @[src/main/scala/chisel3/util/Decoupled.scala:274:95, :277:27, :311:17, :316:17, :317:19]
  assign io_deq_bits_fromDMA = full ? ram[256] : io_enq_bits_fromDMA;	// @[src/main/scala/chisel3/util/Decoupled.scala:274:95, :277:27, :311:17, :316:17, :317:19]
  assign io_deq_bits_scale_bits = full ? ram[288:257] : io_enq_bits_scale_bits;	// @[src/main/scala/chisel3/util/Decoupled.scala:274:95, :277:27, :311:17, :316:17, :317:19]
  assign io_deq_bits_igelu_qb = full ? ram[320:289] : io_enq_bits_igelu_qb;	// @[src/main/scala/chisel3/util/Decoupled.scala:274:95, :277:27, :311:17, :316:17, :317:19]
  assign io_deq_bits_igelu_qc = full ? ram[352:321] : io_enq_bits_igelu_qc;	// @[src/main/scala/chisel3/util/Decoupled.scala:274:95, :277:27, :311:17, :316:17, :317:19]
  assign io_deq_bits_iexp_qln2 = full ? ram[384:353] : io_enq_bits_iexp_qln2;	// @[src/main/scala/chisel3/util/Decoupled.scala:274:95, :277:27, :311:17, :316:17, :317:19]
  assign io_deq_bits_iexp_qln2_inv = full ? ram[416:385] : io_enq_bits_iexp_qln2_inv;	// @[src/main/scala/chisel3/util/Decoupled.scala:274:95, :277:27, :311:17, :316:17, :317:19]
  assign io_deq_bits_act = full ? ram[419:417] : io_enq_bits_act;	// @[src/main/scala/chisel3/util/Decoupled.scala:274:95, :277:27, :311:17, :316:17, :317:19]
  assign io_count = full;	// @[src/main/scala/chisel3/util/Decoupled.scala:277:27]
endmodule

