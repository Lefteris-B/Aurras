// Generated by CIRCT firtool-1.61.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module TLUART(
  input         clock,
                reset,
  output        auto_int_xing_out_sync_0,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
                auto_control_xing_in_a_ready,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  input         auto_control_xing_in_a_valid,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  input  [2:0]  auto_control_xing_in_a_bits_opcode,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  input  [1:0]  auto_control_xing_in_a_bits_size,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  input  [13:0] auto_control_xing_in_a_bits_source,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  input  [28:0] auto_control_xing_in_a_bits_address,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  input  [7:0]  auto_control_xing_in_a_bits_mask,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  input  [63:0] auto_control_xing_in_a_bits_data,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  input         auto_control_xing_in_d_ready,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  output        auto_control_xing_in_d_valid,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  output [2:0]  auto_control_xing_in_d_bits_opcode,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  output [1:0]  auto_control_xing_in_d_bits_size,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  output [13:0] auto_control_xing_in_d_bits_source,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  output [63:0] auto_control_xing_in_d_bits_data,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  output        auto_io_out_txd,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
  input         auto_io_out_rxd	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:367:18]
);

  wire             out_woready_2;	// @[generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
  wire             _out_wofireMux_T;	// @[generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
  wire             out_backSel_0;	// @[generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
  wire             quash;	// @[generators/rocket-chip-blocks/src/main/scala/util/RegMapFIFO.scala:26:26]
  wire             _rxq_io_deq_valid;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:133:19]
  wire [7:0]       _rxq_io_deq_bits;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:133:19]
  wire [8:0]       _rxq_io_count;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:133:19]
  wire             _rxm_io_out_valid;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:132:19]
  wire [7:0]       _rxm_io_out_bits;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:132:19]
  wire             _txq_io_enq_ready;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:130:19]
  wire             _txq_io_deq_valid;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:130:19]
  wire [7:0]       _txq_io_deq_bits;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:130:19]
  wire [8:0]       _txq_io_count;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:130:19]
  wire             _txm_io_in_ready;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:129:19]
  reg  [15:0]      div;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:135:20]
  reg              txen;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:141:21]
  reg              rxen;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:142:21]
  reg  [8:0]       txwm;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:149:21]
  reg  [8:0]       rxwm;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:150:21]
  reg              nstop;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:151:22]
  reg              ie_rxwm;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:186:19]
  reg              ie_txwm;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:186:19]
  wire             ip_txwm = _txq_io_count < txwm;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:130:19, :149:21, :189:28]
  wire             ip_rxwm = _rxq_io_count > rxwm;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:133:19, :150:21, :190:28]
  wire             out_front_bits_read = auto_control_xing_in_a_bits_opcode == 3'h4;	// @[generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:69:36]
  wire             _out_out_bits_data_WIRE_3 = auto_control_xing_in_a_bits_address[11:5] == 7'h0;	// @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala:193:34, generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:70:19, :82:24]
  assign quash = out_woready_2 & auto_control_xing_in_a_bits_mask[3] & auto_control_xing_in_a_bits_data[31];	// @[generators/rocket-chip-blocks/src/main/scala/util/RegMapFIFO.scala:26:26, generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
  assign out_backSel_0 = auto_control_xing_in_a_bits_address[4:3] == 2'h0;	// @[generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
  assign _out_wofireMux_T = auto_control_xing_in_a_valid & auto_control_xing_in_d_ready;	// @[generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
  wire             _out_wofireMux_T_2 = _out_wofireMux_T & ~out_front_bits_read;	// @[generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:69:36, :82:24]
  assign out_woready_2 = _out_wofireMux_T_2 & out_backSel_0 & _out_out_bits_data_WIRE_3;	// @[generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
  wire             out_woready_10 = _out_wofireMux_T_2 & auto_control_xing_in_a_bits_address[4:3] == 2'h1 & _out_out_bits_data_WIRE_3;	// @[generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
  wire             out_woready_12 = _out_wofireMux_T_2 & auto_control_xing_in_a_bits_address[4:3] == 2'h2 & _out_out_bits_data_WIRE_3;	// @[generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
  wire [3:0][63:0] _GEN = {{{48'h0, div}}, {{30'h0, ip_rxwm, ip_txwm, 30'h0, ie_rxwm, ie_txwm}}, {{7'h0, rxwm, 15'h0, rxen, 7'h0, txwm, 14'h0, nstop, txen}}, {{~_rxq_io_deq_valid, 23'h0, _rxq_io_deq_bits, ~_txq_io_enq_ready, 31'h0}}};	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:130:19, :133:19, :135:20, :141:21, :142:21, :149:21, :150:21, :151:22, :186:19, :189:28, :190:28, generators/rocket-chip-blocks/src/main/scala/util/RegMapFIFO.scala:24:9, :45:21, generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24, generators/rocket-chip/src/main/scala/util/MuxLiteral.scala:49:{10,48}]
  always @(posedge clock) begin
    if (reset) begin
      div <= 16'h10F4;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:135:20]
      txen <= 1'h0;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:141:21]
      rxen <= 1'h0;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:142:21]
      txwm <= 9'h0;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:149:21]
      rxwm <= 9'h0;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:149:21, :150:21]
      nstop <= 1'h0;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:151:22]
      ie_rxwm <= 1'h0;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:186:19]
      ie_txwm <= 1'h0;	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:186:19]
    end
    else begin
      if (_out_wofireMux_T_2 & (&(auto_control_xing_in_a_bits_address[4:3])) & _out_out_bits_data_WIRE_3 & (&{{8{auto_control_xing_in_a_bits_mask[1]}}, {8{auto_control_xing_in_a_bits_mask[0]}}}))	// @[generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
        div <= auto_control_xing_in_a_bits_data[15:0];	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:135:20, generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
      if (out_woready_10 & auto_control_xing_in_a_bits_mask[0])	// @[generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
        txen <= auto_control_xing_in_a_bits_data[0];	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:141:21, generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
      if (out_woready_10 & auto_control_xing_in_a_bits_mask[4])	// @[generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
        rxen <= auto_control_xing_in_a_bits_data[32];	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:142:21, generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
      if (out_woready_10 & (&{auto_control_xing_in_a_bits_mask[3], {8{auto_control_xing_in_a_bits_mask[2]}}}))	// @[generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
        txwm <= auto_control_xing_in_a_bits_data[24:16];	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:149:21, generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
      if (out_woready_10 & (&{auto_control_xing_in_a_bits_mask[7], {8{auto_control_xing_in_a_bits_mask[6]}}}))	// @[generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
        rxwm <= auto_control_xing_in_a_bits_data[56:48];	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:150:21, generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
      if (out_woready_10 & auto_control_xing_in_a_bits_mask[0])	// @[generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
        nstop <= auto_control_xing_in_a_bits_data[1];	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:151:22, generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
      if (out_woready_12 & auto_control_xing_in_a_bits_mask[0])	// @[generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
        ie_rxwm <= auto_control_xing_in_a_bits_data[1];	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:186:19, generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
      if (out_woready_12 & auto_control_xing_in_a_bits_mask[0])	// @[generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
        ie_txwm <= auto_control_xing_in_a_bits_data[0];	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:186:19, generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:1];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM[i[0]] = `RANDOM;
        end
        div = _RANDOM[1'h0][15:0];	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:135:20]
        txen = _RANDOM[1'h0][16];	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:135:20, :141:21]
        rxen = _RANDOM[1'h0][17];	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:135:20, :142:21]
        txwm = {_RANDOM[1'h0][31:24], _RANDOM[1'h1][0]};	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:135:20, :149:21]
        rxwm = _RANDOM[1'h1][9:1];	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:149:21, :150:21]
        nstop = _RANDOM[1'h1][10];	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:149:21, :151:22]
        ie_rxwm = _RANDOM[1'h1][12];	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:149:21, :186:19]
        ie_txwm = _RANDOM[1'h1][13];	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:149:21, :186:19]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  IntSyncCrossingSource intsource (	// @[generators/rocket-chip/src/main/scala/interrupts/Crossing.scala:28:31]
    .clock           (clock),
    .reset           (reset),
    .auto_in_0       (ip_txwm & ie_txwm | ip_rxwm & ie_rxwm),	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:186:19, :189:28, :190:28, :191:{29,41,53}]
    .auto_out_sync_0 (auto_int_xing_out_sync_0)
  );
  UARTTx txm (	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:129:19]
    .clock       (clock),
    .reset       (reset),
    .io_en       (txen),	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:141:21]
    .io_in_ready (_txm_io_in_ready),
    .io_in_valid (_txq_io_deq_valid),	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:130:19]
    .io_in_bits  (_txq_io_deq_bits),	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:130:19]
    .io_out      (auto_io_out_txd),
    .io_div      (div),	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:135:20]
    .io_nstop    (nstop)	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:151:22]
  );
  Queue_88 txq (	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:130:19]
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_txq_io_enq_ready),
    .io_enq_valid (out_woready_2 & auto_control_xing_in_a_bits_mask[0] & ~quash),	// @[generators/rocket-chip-blocks/src/main/scala/util/RegMapFIFO.scala:18:{30,33}, :26:26, generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
    .io_enq_bits  (auto_control_xing_in_a_bits_data[7:0]),	// @[generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24]
    .io_deq_ready (_txm_io_in_ready),	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:129:19]
    .io_deq_valid (_txq_io_deq_valid),
    .io_deq_bits  (_txq_io_deq_bits),
    .io_count     (_txq_io_count)
  );
  UARTRx rxm (	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:132:19]
    .clock        (clock),
    .reset        (reset),
    .io_en        (rxen),	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:142:21]
    .io_in        (auto_io_out_rxd),
    .io_out_valid (_rxm_io_out_valid),
    .io_out_bits  (_rxm_io_out_bits),
    .io_div       (div)	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:135:20]
  );
  Queue_88 rxq (	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:133:19]
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (/* unused */),
    .io_enq_valid (_rxm_io_out_valid),	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:132:19]
    .io_enq_bits  (_rxm_io_out_bits),	// @[generators/rocket-chip-blocks/src/main/scala/devices/uart/UART.scala:132:19]
    .io_deq_ready (_out_wofireMux_T & out_front_bits_read & out_backSel_0 & _out_out_bits_data_WIRE_3 & auto_control_xing_in_a_bits_mask[4]),	// @[generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:69:36, :82:24]
    .io_deq_valid (_rxq_io_deq_valid),
    .io_deq_bits  (_rxq_io_deq_bits),
    .io_count     (_rxq_io_count)
  );
  assign auto_control_xing_in_a_ready = auto_control_xing_in_d_ready;
  assign auto_control_xing_in_d_valid = auto_control_xing_in_a_valid;
  assign auto_control_xing_in_d_bits_opcode = {2'h0, out_front_bits_read};	// @[generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:69:36, :100:19]
  assign auto_control_xing_in_d_bits_size = auto_control_xing_in_a_bits_size;
  assign auto_control_xing_in_d_bits_source = auto_control_xing_in_a_bits_source;
  assign auto_control_xing_in_d_bits_data = _out_out_bits_data_WIRE_3 ? _GEN[auto_control_xing_in_a_bits_address[4:3]] : 64'h0;	// @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala:259:74, generators/rocket-chip/src/main/scala/tilelink/RegisterRouter.scala:82:24, generators/rocket-chip/src/main/scala/util/MuxLiteral.scala:49:10]
endmodule

