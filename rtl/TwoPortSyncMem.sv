// Generated by CIRCT firtool-1.61.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module TwoPortSyncMem(
  input         clock,
                reset,
  input  [9:0]  io_waddr,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_raddr,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
  input  [31:0] io_wdata_0_0,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_wdata_1_0,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_wdata_2_0,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_wdata_3_0,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_wdata_4_0,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_wdata_5_0,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_wdata_6_0,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_wdata_7_0,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
  output [31:0] io_rdata_0_0,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_rdata_1_0,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_rdata_2_0,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_rdata_3_0,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_rdata_4_0,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_rdata_5_0,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_rdata_6_0,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_rdata_7_0,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
  input         io_wen,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_ren,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_0,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_1,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_2,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_3,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_4,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_5,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_6,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_7,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_8,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_9,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_10,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_11,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_12,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_13,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_14,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_15,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_16,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_17,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_18,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_19,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_20,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_21,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_22,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_23,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_24,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_25,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_26,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_27,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_28,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_29,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_30,	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
                io_mask_31	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:31:14]
);

  wire [255:0] _mem_R0_data;	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:45:24]
  `ifndef SYNTHESIS	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:41:9]
    always @(posedge clock) begin	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:41:9]
      if (~reset & io_wen & io_ren & io_raddr == io_waddr) begin	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:41:{9,41}]
        if (`ASSERT_VERBOSE_COND_)	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:41:9]
          $error("Assertion failed: undefined behavior in dual-ported SRAM\n    at SyncMem.scala:41 assert(!(io.wen && io.ren && io.raddr === io.waddr), \"undefined behavior in dual-ported SRAM\")\n");	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:41:9]
        if (`STOP_COND_)	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:41:9]
          $fatal;	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:41:9]
      end
    end // always @(posedge)
  `endif // not def SYNTHESIS
  mem_0 mem (	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:45:24]
    .R0_addr (io_raddr),
    .R0_en   (io_ren),
    .R0_clk  (clock),
    .R0_data (_mem_R0_data),
    .W0_addr (io_waddr),
    .W0_en   (io_wen),
    .W0_clk  (clock),
    .W0_data ({io_wdata_7_0, io_wdata_6_0, io_wdata_5_0, io_wdata_4_0, io_wdata_3_0, io_wdata_2_0, io_wdata_1_0, io_wdata_0_0}),	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:50:42]
    .W0_mask ({io_mask_31, io_mask_30, io_mask_29, io_mask_28, io_mask_27, io_mask_26, io_mask_25, io_mask_24, io_mask_23, io_mask_22, io_mask_21, io_mask_20, io_mask_19, io_mask_18, io_mask_17, io_mask_16, io_mask_15, io_mask_14, io_mask_13, io_mask_12, io_mask_11, io_mask_10, io_mask_9, io_mask_8, io_mask_7, io_mask_6, io_mask_5, io_mask_4, io_mask_3, io_mask_2, io_mask_1, io_mask_0})	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:45:24]
  );
  assign io_rdata_0_0 = _mem_R0_data[31:0];	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:45:24, :47:50]
  assign io_rdata_1_0 = _mem_R0_data[63:32];	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:45:24, :47:50]
  assign io_rdata_2_0 = _mem_R0_data[95:64];	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:45:24, :47:50]
  assign io_rdata_3_0 = _mem_R0_data[127:96];	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:45:24, :47:50]
  assign io_rdata_4_0 = _mem_R0_data[159:128];	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:45:24, :47:50]
  assign io_rdata_5_0 = _mem_R0_data[191:160];	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:45:24, :47:50]
  assign io_rdata_6_0 = _mem_R0_data[223:192];	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:45:24, :47:50]
  assign io_rdata_7_0 = _mem_R0_data[255:224];	// @[generators/gemmini/src/main/scala/gemmini/SyncMem.scala:45:24, :47:50]
endmodule

