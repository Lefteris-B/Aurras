// Generated by CIRCT firtool-1.61.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module ScalePipe(
  input         clock,
                reset,
                io_in_valid,	// @[generators/gemmini/src/main/scala/gemmini/VectorScalarMultiplier.scala:35:14]
  input  [7:0]  io_in_bits_data,	// @[generators/gemmini/src/main/scala/gemmini/VectorScalarMultiplier.scala:35:14]
  input  [31:0] io_in_bits_scale_bits,	// @[generators/gemmini/src/main/scala/gemmini/VectorScalarMultiplier.scala:35:14]
  input  [1:0]  io_in_bits_id,	// @[generators/gemmini/src/main/scala/gemmini/VectorScalarMultiplier.scala:35:14]
  input  [2:0]  io_in_bits_index,	// @[generators/gemmini/src/main/scala/gemmini/VectorScalarMultiplier.scala:35:14]
  output        io_out_valid,	// @[generators/gemmini/src/main/scala/gemmini/VectorScalarMultiplier.scala:35:14]
  output [7:0]  io_out_bits_data,	// @[generators/gemmini/src/main/scala/gemmini/VectorScalarMultiplier.scala:35:14]
  output [1:0]  io_out_bits_id,	// @[generators/gemmini/src/main/scala/gemmini/VectorScalarMultiplier.scala:35:14]
  output [2:0]  io_out_bits_index	// @[generators/gemmini/src/main/scala/gemmini/VectorScalarMultiplier.scala:35:14]
);

  wire [7:0]  _out_bits_data_rec_fn_to_in_io_out;	// @[generators/gemmini/src/main/scala/gemmini/Configs.scala:93:34]
  wire [2:0]  _out_bits_data_rec_fn_to_in_io_intExceptionFlags;	// @[generators/gemmini/src/main/scala/gemmini/Configs.scala:93:34]
  wire [32:0] _out_bits_data_muladder_io_out;	// @[generators/gemmini/src/main/scala/gemmini/Configs.scala:84:30]
  wire [32:0] _out_bits_data_in_to_rec_fn_io_out;	// @[generators/gemmini/src/main/scala/gemmini/Configs.scala:76:34]
  wire        out_bits_data_f_rec_rawIn_isZeroExpIn = io_in_bits_scale_bits[30:23] == 8'h0;	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:45:19, :48:30]
  wire [4:0]  out_bits_data_f_rec_rawIn_normDist = io_in_bits_scale_bits[22] ? 5'h0 : io_in_bits_scale_bits[21] ? 5'h1 : io_in_bits_scale_bits[20] ? 5'h2 : io_in_bits_scale_bits[19] ? 5'h3 : io_in_bits_scale_bits[18] ? 5'h4 : io_in_bits_scale_bits[17] ? 5'h5 : io_in_bits_scale_bits[16] ? 5'h6 : io_in_bits_scale_bits[15] ? 5'h7 : io_in_bits_scale_bits[14] ? 5'h8 : io_in_bits_scale_bits[13] ? 5'h9 : io_in_bits_scale_bits[12] ? 5'hA : io_in_bits_scale_bits[11] ? 5'hB : io_in_bits_scale_bits[10] ? 5'hC : io_in_bits_scale_bits[9] ? 5'hD : io_in_bits_scale_bits[8] ? 5'hE : io_in_bits_scale_bits[7] ? 5'hF : io_in_bits_scale_bits[6] ? 5'h10 : io_in_bits_scale_bits[5] ? 5'h11 : io_in_bits_scale_bits[4] ? 5'h12 : io_in_bits_scale_bits[3] ? 5'h13 : io_in_bits_scale_bits[2] ? 5'h14 : io_in_bits_scale_bits[1] ? 5'h15 : 5'h16;	// @[generators/hardfloat/hardfloat/src/main/scala/primitives.scala:91:52, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:46:21, src/main/scala/chisel3/util/Mux.scala:50:70]
  wire [53:0] _out_bits_data_f_rec_rawIn_subnormFract_T = {31'h0, io_in_bits_scale_bits[22:0]} << out_bits_data_f_rec_rawIn_normDist;	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:46:21, :52:33, src/main/scala/chisel3/util/Mux.scala:50:70]
  wire [8:0]  _out_bits_data_f_rec_rawIn_adjustedExp_T_4 = (out_bits_data_f_rec_rawIn_isZeroExpIn ? {4'hF, ~out_bits_data_f_rec_rawIn_normDist} : {1'h0, io_in_bits_scale_bits[30:23]}) + {7'h20, out_bits_data_f_rec_rawIn_isZeroExpIn ? 2'h2 : 2'h1};	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:45:19, :48:30, :54:10, :55:18, :57:9, :58:14, src/main/scala/chisel3/util/Mux.scala:50:70]
  wire [2:0]  _out_bits_data_f_rec_T_1 = out_bits_data_f_rec_rawIn_isZeroExpIn & ~(|(io_in_bits_scale_bits[22:0])) ? 3'h0 : _out_bits_data_f_rec_rawIn_adjustedExp_T_4[8:6];	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:46:21, :48:30, :49:34, :57:9, :60:30, generators/hardfloat/hardfloat/src/main/scala/recFNFromFN.scala:48:{15,50}]
  reg         io_out_pipe_v;	// @[src/main/scala/chisel3/util/Valid.scala:129:24]
  reg  [7:0]  io_out_pipe_b_data;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
  reg  [1:0]  io_out_pipe_b_id;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
  reg  [2:0]  io_out_pipe_b_index;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
  reg         io_out_pipe_pipe_v;	// @[src/main/scala/chisel3/util/Valid.scala:129:24]
  reg  [7:0]  io_out_pipe_pipe_b_data;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
  reg  [1:0]  io_out_pipe_pipe_b_id;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
  reg  [2:0]  io_out_pipe_pipe_b_index;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
  reg         io_out_pipe_pipe_pipe_v;	// @[src/main/scala/chisel3/util/Valid.scala:129:24]
  reg  [7:0]  io_out_pipe_pipe_pipe_b_data;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
  reg  [1:0]  io_out_pipe_pipe_pipe_b_id;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
  reg  [2:0]  io_out_pipe_pipe_pipe_b_index;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
  reg         io_out_pipe_pipe_pipe_pipe_v;	// @[src/main/scala/chisel3/util/Valid.scala:129:24]
  reg  [7:0]  io_out_pipe_pipe_pipe_pipe_b_data;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
  reg  [1:0]  io_out_pipe_pipe_pipe_pipe_b_id;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
  reg  [2:0]  io_out_pipe_pipe_pipe_pipe_b_index;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
  always @(posedge clock) begin
    if (reset) begin
      io_out_pipe_v <= 1'h0;	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:48:30, src/main/scala/chisel3/util/Valid.scala:129:24]
      io_out_pipe_pipe_v <= 1'h0;	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:48:30, src/main/scala/chisel3/util/Valid.scala:129:24]
      io_out_pipe_pipe_pipe_v <= 1'h0;	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:48:30, src/main/scala/chisel3/util/Valid.scala:129:24]
      io_out_pipe_pipe_pipe_pipe_v <= 1'h0;	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:48:30, src/main/scala/chisel3/util/Valid.scala:129:24]
    end
    else begin
      io_out_pipe_v <= io_in_valid;	// @[src/main/scala/chisel3/util/Valid.scala:129:24]
      io_out_pipe_pipe_v <= io_out_pipe_v;	// @[src/main/scala/chisel3/util/Valid.scala:129:24]
      io_out_pipe_pipe_pipe_v <= io_out_pipe_pipe_v;	// @[src/main/scala/chisel3/util/Valid.scala:129:24]
      io_out_pipe_pipe_pipe_pipe_v <= io_out_pipe_pipe_pipe_v;	// @[src/main/scala/chisel3/util/Valid.scala:129:24]
    end
    if (io_in_valid) begin	// @[generators/gemmini/src/main/scala/gemmini/VectorScalarMultiplier.scala:35:14]
      io_out_pipe_b_data <= _out_bits_data_rec_fn_to_in_io_intExceptionFlags[1] ? (_out_bits_data_muladder_io_out[32] ? 8'h80 : 8'h7F) : _out_bits_data_rec_fn_to_in_io_out;	// @[generators/gemmini/src/main/scala/gemmini/Configs.scala:84:30, :93:34, :98:57, :102:22, :104:12, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:59:25, src/main/scala/chisel3/util/Valid.scala:130:26]
      io_out_pipe_b_id <= io_in_bits_id;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
      io_out_pipe_b_index <= io_in_bits_index;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
    end
    if (io_out_pipe_v) begin	// @[src/main/scala/chisel3/util/Valid.scala:129:24]
      io_out_pipe_pipe_b_data <= io_out_pipe_b_data;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
      io_out_pipe_pipe_b_id <= io_out_pipe_b_id;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
      io_out_pipe_pipe_b_index <= io_out_pipe_b_index;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
    end
    if (io_out_pipe_pipe_v) begin	// @[src/main/scala/chisel3/util/Valid.scala:129:24]
      io_out_pipe_pipe_pipe_b_data <= io_out_pipe_pipe_b_data;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
      io_out_pipe_pipe_pipe_b_id <= io_out_pipe_pipe_b_id;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
      io_out_pipe_pipe_pipe_b_index <= io_out_pipe_pipe_b_index;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
    end
    if (io_out_pipe_pipe_pipe_v) begin	// @[src/main/scala/chisel3/util/Valid.scala:129:24]
      io_out_pipe_pipe_pipe_pipe_b_data <= io_out_pipe_pipe_pipe_b_data;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
      io_out_pipe_pipe_pipe_pipe_b_id <= io_out_pipe_pipe_pipe_b_id;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
      io_out_pipe_pipe_pipe_pipe_b_index <= io_out_pipe_pipe_pipe_b_index;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:5];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [2:0] i = 3'h0; i < 3'h6; i += 3'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        io_out_pipe_v = _RANDOM[3'h0][0];	// @[src/main/scala/chisel3/util/Valid.scala:129:24]
        io_out_pipe_b_data = _RANDOM[3'h0][8:1];	// @[src/main/scala/chisel3/util/Valid.scala:129:24, :130:26]
        io_out_pipe_b_id = _RANDOM[3'h1][10:9];	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
        io_out_pipe_b_index = _RANDOM[3'h1][13:11];	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
        io_out_pipe_pipe_v = _RANDOM[3'h1][14];	// @[src/main/scala/chisel3/util/Valid.scala:129:24, :130:26]
        io_out_pipe_pipe_b_data = _RANDOM[3'h1][22:15];	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
        io_out_pipe_pipe_b_id = _RANDOM[3'h2][24:23];	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
        io_out_pipe_pipe_b_index = _RANDOM[3'h2][27:25];	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
        io_out_pipe_pipe_pipe_v = _RANDOM[3'h2][28];	// @[src/main/scala/chisel3/util/Valid.scala:129:24, :130:26]
        io_out_pipe_pipe_pipe_b_data = {_RANDOM[3'h2][31:29], _RANDOM[3'h3][4:0]};	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
        io_out_pipe_pipe_pipe_b_id = _RANDOM[3'h4][6:5];	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
        io_out_pipe_pipe_pipe_b_index = _RANDOM[3'h4][9:7];	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
        io_out_pipe_pipe_pipe_pipe_v = _RANDOM[3'h4][10];	// @[src/main/scala/chisel3/util/Valid.scala:129:24, :130:26]
        io_out_pipe_pipe_pipe_pipe_b_data = _RANDOM[3'h4][18:11];	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
        io_out_pipe_pipe_pipe_pipe_b_id = _RANDOM[3'h5][20:19];	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
        io_out_pipe_pipe_pipe_pipe_b_index = _RANDOM[3'h5][23:21];	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  INToRecFN out_bits_data_in_to_rec_fn (	// @[generators/gemmini/src/main/scala/gemmini/Configs.scala:76:34]
    .io_in  (io_in_bits_data),
    .io_out (_out_bits_data_in_to_rec_fn_io_out)
  );
  MulAddRecFN out_bits_data_muladder (	// @[generators/gemmini/src/main/scala/gemmini/Configs.scala:84:30]
    .io_a   (_out_bits_data_in_to_rec_fn_io_out),	// @[generators/gemmini/src/main/scala/gemmini/Configs.scala:76:34]
    .io_b   ({io_in_bits_scale_bits[31], _out_bits_data_f_rec_T_1[2:1], _out_bits_data_f_rec_T_1[0] | (&(_out_bits_data_f_rec_rawIn_adjustedExp_T_4[8:7])) & (|(io_in_bits_scale_bits[22:0])), _out_bits_data_f_rec_rawIn_adjustedExp_T_4[5:0], out_bits_data_f_rec_rawIn_isZeroExpIn ? {_out_bits_data_f_rec_rawIn_subnormFract_T[21:0], 1'h0} : io_in_bits_scale_bits[22:0]}),	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromFN.scala:44:18, :46:21, :48:30, :49:34, :52:{33,46,64}, :57:9, :61:{32,57}, :64:28, :70:33, generators/hardfloat/hardfloat/src/main/scala/recFNFromFN.scala:48:{15,76}, :50:{23,41}]
    .io_out (_out_bits_data_muladder_io_out)
  );
  RecFNToIN out_bits_data_rec_fn_to_in (	// @[generators/gemmini/src/main/scala/gemmini/Configs.scala:93:34]
    .io_in                (_out_bits_data_muladder_io_out),	// @[generators/gemmini/src/main/scala/gemmini/Configs.scala:84:30]
    .io_out               (_out_bits_data_rec_fn_to_in_io_out),
    .io_intExceptionFlags (_out_bits_data_rec_fn_to_in_io_intExceptionFlags)
  );
  assign io_out_valid = io_out_pipe_pipe_pipe_pipe_v;	// @[src/main/scala/chisel3/util/Valid.scala:129:24]
  assign io_out_bits_data = io_out_pipe_pipe_pipe_pipe_b_data;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
  assign io_out_bits_id = io_out_pipe_pipe_pipe_pipe_b_id;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
  assign io_out_bits_index = io_out_pipe_pipe_pipe_pipe_b_index;	// @[src/main/scala/chisel3/util/Valid.scala:130:26]
endmodule

