// Generated by CIRCT firtool-1.61.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module TestHarness(
  input  clock,
         reset,
  output io_success	// @[generators/chipyard/src/main/scala/harness/TestHarness.scala:20:14]
);

  wire        _source_1_clk;	// @[generators/chipyard/src/main/scala/harness/HarnessClocks.scala:70:26]
  wire        _source_clk;	// @[generators/chipyard/src/main/scala/harness/HarnessClocks.scala:70:26]
  wire        _harnessBinderReset_catcher_io_sync_reset;	// @[generators/rocket-chip/src/main/scala/util/ResetCatchAndSync.scala:39:28]
  wire        _success_exit_sim_tsi_in_valid;	// @[generators/testchipip/src/main/scala/tsi/SimTSI.scala:12:23]
  wire [31:0] _success_exit_sim_tsi_in_bits;	// @[generators/testchipip/src/main/scala/tsi/SimTSI.scala:12:23]
  wire        _success_exit_sim_tsi_out_ready;	// @[generators/testchipip/src/main/scala/tsi/SimTSI.scala:12:23]
  wire [31:0] _success_exit_sim_exit;	// @[generators/testchipip/src/main/scala/tsi/SimTSI.scala:12:23]
  wire        _ram_io_ser_in_ready;	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:244:27]
  wire        _ram_io_ser_out_valid;	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:244:27]
  wire [31:0] _ram_io_ser_out_bits;	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:244:27]
  wire        _ram_io_tsi_in_ready;	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:244:27]
  wire        _ram_io_tsi_out_valid;	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:244:27]
  wire [31:0] _ram_io_tsi_out_bits;	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:244:27]
  wire [31:0] _plusarg_reader_1_out;	// @[generators/rocket-chip/src/main/scala/util/PlusArg.scala:80:11]
  wire        _jtag_jtag_TCK;	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:176:22]
  wire        _jtag_jtag_TMS;	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:176:22]
  wire        _jtag_jtag_TDI;	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:176:22]
  wire [31:0] _jtag_exit;	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:176:22]
  wire        _plusarg_reader_out;	// @[generators/rocket-chip/src/main/scala/util/PlusArg.scala:80:11]
  wire        _uart_sim_0_uartno0_io_uart_rxd;	// @[generators/testchipip/src/main/scala/uart/SimUART.scala:76:28]
  wire        _simdram_axi_aw_ready;	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:115:21]
  wire        _simdram_axi_w_ready;	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:115:21]
  wire        _simdram_axi_b_valid;	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:115:21]
  wire [3:0]  _simdram_axi_b_bits_id;	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:115:21]
  wire [1:0]  _simdram_axi_b_bits_resp;	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:115:21]
  wire        _simdram_axi_ar_ready;	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:115:21]
  wire        _simdram_axi_r_valid;	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:115:21]
  wire [3:0]  _simdram_axi_r_bits_id;	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:115:21]
  wire [63:0] _simdram_axi_r_bits_data;	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:115:21]
  wire [1:0]  _simdram_axi_r_bits_resp;	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:115:21]
  wire        _simdram_axi_r_bits_last;	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:115:21]
  wire        _chiptop0_axi4_mem_0_clock;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire        _chiptop0_axi4_mem_0_bits_aw_valid;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire [3:0]  _chiptop0_axi4_mem_0_bits_aw_bits_id;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire [31:0] _chiptop0_axi4_mem_0_bits_aw_bits_addr;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire [7:0]  _chiptop0_axi4_mem_0_bits_aw_bits_len;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire [2:0]  _chiptop0_axi4_mem_0_bits_aw_bits_size;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire [1:0]  _chiptop0_axi4_mem_0_bits_aw_bits_burst;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire        _chiptop0_axi4_mem_0_bits_aw_bits_lock;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire [3:0]  _chiptop0_axi4_mem_0_bits_aw_bits_cache;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire [2:0]  _chiptop0_axi4_mem_0_bits_aw_bits_prot;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire [3:0]  _chiptop0_axi4_mem_0_bits_aw_bits_qos;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire        _chiptop0_axi4_mem_0_bits_w_valid;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire [63:0] _chiptop0_axi4_mem_0_bits_w_bits_data;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire [7:0]  _chiptop0_axi4_mem_0_bits_w_bits_strb;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire        _chiptop0_axi4_mem_0_bits_w_bits_last;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire        _chiptop0_axi4_mem_0_bits_b_ready;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire        _chiptop0_axi4_mem_0_bits_ar_valid;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire [3:0]  _chiptop0_axi4_mem_0_bits_ar_bits_id;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire [31:0] _chiptop0_axi4_mem_0_bits_ar_bits_addr;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire [7:0]  _chiptop0_axi4_mem_0_bits_ar_bits_len;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire [2:0]  _chiptop0_axi4_mem_0_bits_ar_bits_size;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire [1:0]  _chiptop0_axi4_mem_0_bits_ar_bits_burst;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire        _chiptop0_axi4_mem_0_bits_ar_bits_lock;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire [3:0]  _chiptop0_axi4_mem_0_bits_ar_bits_cache;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire [2:0]  _chiptop0_axi4_mem_0_bits_ar_bits_prot;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire [3:0]  _chiptop0_axi4_mem_0_bits_ar_bits_qos;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire        _chiptop0_axi4_mem_0_bits_r_ready;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire        _chiptop0_jtag_TDO;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire        _chiptop0_serial_tl_0_in_ready;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire        _chiptop0_serial_tl_0_out_valid;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire [31:0] _chiptop0_serial_tl_0_out_bits;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  wire        _chiptop0_uart_0_txd;	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
  `ifndef SYNTHESIS	// @[generators/rocket-chip/src/main/scala/devices/debug/Periphery.scala:233:11]
    always @(posedge _source_1_clk) begin	// @[generators/chipyard/src/main/scala/harness/HarnessClocks.scala:70:26, generators/rocket-chip/src/main/scala/devices/debug/Periphery.scala:233:11]
      if (~_harnessBinderReset_catcher_io_sync_reset & (|(_jtag_exit[31:1]))) begin	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:169:37, :176:22, :177:82, generators/rocket-chip/src/main/scala/devices/debug/Periphery.scala:233:{11,20,72}, generators/rocket-chip/src/main/scala/util/ResetCatchAndSync.scala:39:28]
        if (`ASSERT_VERBOSE_COND_)	// @[generators/rocket-chip/src/main/scala/devices/debug/Periphery.scala:233:11]
          $error("Assertion failed: *** FAILED *** (exit code = %d)\n\n    at Periphery.scala:233 assert(io.exit < 2.U, \"*** FAILED *** (exit code = %%%%d)\\n\", io.exit >> 1.U)\n", {1'h0, _jtag_exit[31:1]});	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:169:37, :176:22, generators/chipyard/src/main/scala/harness/TestHarness.scala:23:25, generators/rocket-chip/src/main/scala/devices/debug/Periphery.scala:233:{11,72}]
        if (`STOP_COND_)	// @[generators/rocket-chip/src/main/scala/devices/debug/Periphery.scala:233:11]
          $fatal;	// @[generators/rocket-chip/src/main/scala/devices/debug/Periphery.scala:233:11]
      end
      if (~_harnessBinderReset_catcher_io_sync_reset & (|(_success_exit_sim_exit[31:1]))) begin	// @[generators/rocket-chip/src/main/scala/util/ResetCatchAndSync.scala:39:28, generators/testchipip/src/main/scala/tsi/SimTSI.scala:12:23, :20:22, :21:11]
        if (`ASSERT_VERBOSE_COND_)	// @[generators/testchipip/src/main/scala/tsi/SimTSI.scala:21:11]
          $error("Assertion failed: *** FAILED *** (exit code = %d)\n\n    at SimTSI.scala:21 assert(!error, \"*** FAILED *** (exit code = %%%%d)\\n\", exit >> 1.U)\n", {1'h0, _success_exit_sim_exit[31:1]});	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:169:37, generators/chipyard/src/main/scala/harness/TestHarness.scala:23:25, generators/testchipip/src/main/scala/tsi/SimTSI.scala:12:23, :20:22, :21:{11,62}]
        if (`STOP_COND_)	// @[generators/testchipip/src/main/scala/tsi/SimTSI.scala:21:11]
          $fatal;	// @[generators/testchipip/src/main/scala/tsi/SimTSI.scala:21:11]
      end
    end // always @(posedge)
  `endif // not def SYNTHESIS
  ChipTop chiptop0 (	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi4_mem_0_clock              (_chiptop0_axi4_mem_0_clock),
    .axi4_mem_0_bits_aw_ready      (_simdram_axi_aw_ready),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:115:21]
    .axi4_mem_0_bits_aw_valid      (_chiptop0_axi4_mem_0_bits_aw_valid),
    .axi4_mem_0_bits_aw_bits_id    (_chiptop0_axi4_mem_0_bits_aw_bits_id),
    .axi4_mem_0_bits_aw_bits_addr  (_chiptop0_axi4_mem_0_bits_aw_bits_addr),
    .axi4_mem_0_bits_aw_bits_len   (_chiptop0_axi4_mem_0_bits_aw_bits_len),
    .axi4_mem_0_bits_aw_bits_size  (_chiptop0_axi4_mem_0_bits_aw_bits_size),
    .axi4_mem_0_bits_aw_bits_burst (_chiptop0_axi4_mem_0_bits_aw_bits_burst),
    .axi4_mem_0_bits_aw_bits_lock  (_chiptop0_axi4_mem_0_bits_aw_bits_lock),
    .axi4_mem_0_bits_aw_bits_cache (_chiptop0_axi4_mem_0_bits_aw_bits_cache),
    .axi4_mem_0_bits_aw_bits_prot  (_chiptop0_axi4_mem_0_bits_aw_bits_prot),
    .axi4_mem_0_bits_aw_bits_qos   (_chiptop0_axi4_mem_0_bits_aw_bits_qos),
    .axi4_mem_0_bits_w_ready       (_simdram_axi_w_ready),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:115:21]
    .axi4_mem_0_bits_w_valid       (_chiptop0_axi4_mem_0_bits_w_valid),
    .axi4_mem_0_bits_w_bits_data   (_chiptop0_axi4_mem_0_bits_w_bits_data),
    .axi4_mem_0_bits_w_bits_strb   (_chiptop0_axi4_mem_0_bits_w_bits_strb),
    .axi4_mem_0_bits_w_bits_last   (_chiptop0_axi4_mem_0_bits_w_bits_last),
    .axi4_mem_0_bits_b_ready       (_chiptop0_axi4_mem_0_bits_b_ready),
    .axi4_mem_0_bits_b_valid       (_simdram_axi_b_valid),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:115:21]
    .axi4_mem_0_bits_b_bits_id     (_simdram_axi_b_bits_id),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:115:21]
    .axi4_mem_0_bits_b_bits_resp   (_simdram_axi_b_bits_resp),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:115:21]
    .axi4_mem_0_bits_ar_ready      (_simdram_axi_ar_ready),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:115:21]
    .axi4_mem_0_bits_ar_valid      (_chiptop0_axi4_mem_0_bits_ar_valid),
    .axi4_mem_0_bits_ar_bits_id    (_chiptop0_axi4_mem_0_bits_ar_bits_id),
    .axi4_mem_0_bits_ar_bits_addr  (_chiptop0_axi4_mem_0_bits_ar_bits_addr),
    .axi4_mem_0_bits_ar_bits_len   (_chiptop0_axi4_mem_0_bits_ar_bits_len),
    .axi4_mem_0_bits_ar_bits_size  (_chiptop0_axi4_mem_0_bits_ar_bits_size),
    .axi4_mem_0_bits_ar_bits_burst (_chiptop0_axi4_mem_0_bits_ar_bits_burst),
    .axi4_mem_0_bits_ar_bits_lock  (_chiptop0_axi4_mem_0_bits_ar_bits_lock),
    .axi4_mem_0_bits_ar_bits_cache (_chiptop0_axi4_mem_0_bits_ar_bits_cache),
    .axi4_mem_0_bits_ar_bits_prot  (_chiptop0_axi4_mem_0_bits_ar_bits_prot),
    .axi4_mem_0_bits_ar_bits_qos   (_chiptop0_axi4_mem_0_bits_ar_bits_qos),
    .axi4_mem_0_bits_r_ready       (_chiptop0_axi4_mem_0_bits_r_ready),
    .axi4_mem_0_bits_r_valid       (_simdram_axi_r_valid),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:115:21]
    .axi4_mem_0_bits_r_bits_id     (_simdram_axi_r_bits_id),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:115:21]
    .axi4_mem_0_bits_r_bits_data   (_simdram_axi_r_bits_data),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:115:21]
    .axi4_mem_0_bits_r_bits_resp   (_simdram_axi_r_bits_resp),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:115:21]
    .axi4_mem_0_bits_r_bits_last   (_simdram_axi_r_bits_last),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:115:21]
    .custom_boot                   (_plusarg_reader_out),	// @[generators/rocket-chip/src/main/scala/util/PlusArg.scala:80:11]
    .jtag_TCK                      (_jtag_jtag_TCK),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:176:22]
    .jtag_TMS                      (_jtag_jtag_TMS),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:176:22]
    .jtag_TDI                      (_jtag_jtag_TDI),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:176:22]
    .jtag_TDO                      (_chiptop0_jtag_TDO),
    .reset_io                      (reset),
    .clock_uncore                  (_source_clk),	// @[generators/chipyard/src/main/scala/harness/HarnessClocks.scala:70:26]
    .clock_tap                     (/* unused */),
    .serial_tl_0_in_ready          (_chiptop0_serial_tl_0_in_ready),
    .serial_tl_0_in_valid          (_ram_io_ser_out_valid),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:244:27]
    .serial_tl_0_in_bits           (_ram_io_ser_out_bits),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:244:27]
    .serial_tl_0_out_ready         (_ram_io_ser_in_ready),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:244:27]
    .serial_tl_0_out_valid         (_chiptop0_serial_tl_0_out_valid),
    .serial_tl_0_out_bits          (_chiptop0_serial_tl_0_out_bits),
    .serial_tl_0_clock_in          (_source_1_clk),	// @[generators/chipyard/src/main/scala/harness/HarnessClocks.scala:70:26]
    .uart_0_txd                    (_chiptop0_uart_0_txd),
    .uart_0_rxd                    (_uart_sim_0_uartno0_io_uart_rxd)	// @[generators/testchipip/src/main/scala/uart/SimUART.scala:76:28]
  );
  SimDRAM #(
    .ADDR_BITS(32),
    .CHIP_ID(0),
    .CLOCK_HZ(500000000),
    .DATA_BITS(64),
    .ID_BITS(4),
    .LINE_SIZE(64),
    .MEM_BASE(40'd2147483648),
    .MEM_SIZE(268435456)
  ) simdram (	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:115:21]
    .clock             (_chiptop0_axi4_mem_0_clock),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .reset             (_harnessBinderReset_catcher_io_sync_reset),	// @[generators/rocket-chip/src/main/scala/util/ResetCatchAndSync.scala:39:28]
    .axi_aw_ready      (_simdram_axi_aw_ready),
    .axi_aw_valid      (_chiptop0_axi4_mem_0_bits_aw_valid),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_aw_bits_id    (_chiptop0_axi4_mem_0_bits_aw_bits_id),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_aw_bits_addr  (_chiptop0_axi4_mem_0_bits_aw_bits_addr),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_aw_bits_len   (_chiptop0_axi4_mem_0_bits_aw_bits_len),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_aw_bits_size  (_chiptop0_axi4_mem_0_bits_aw_bits_size),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_aw_bits_burst (_chiptop0_axi4_mem_0_bits_aw_bits_burst),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_aw_bits_lock  (_chiptop0_axi4_mem_0_bits_aw_bits_lock),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_aw_bits_cache (_chiptop0_axi4_mem_0_bits_aw_bits_cache),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_aw_bits_prot  (_chiptop0_axi4_mem_0_bits_aw_bits_prot),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_aw_bits_qos   (_chiptop0_axi4_mem_0_bits_aw_bits_qos),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_w_ready       (_simdram_axi_w_ready),
    .axi_w_valid       (_chiptop0_axi4_mem_0_bits_w_valid),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_w_bits_data   (_chiptop0_axi4_mem_0_bits_w_bits_data),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_w_bits_strb   (_chiptop0_axi4_mem_0_bits_w_bits_strb),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_w_bits_last   (_chiptop0_axi4_mem_0_bits_w_bits_last),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_b_ready       (_chiptop0_axi4_mem_0_bits_b_ready),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_b_valid       (_simdram_axi_b_valid),
    .axi_b_bits_id     (_simdram_axi_b_bits_id),
    .axi_b_bits_resp   (_simdram_axi_b_bits_resp),
    .axi_ar_ready      (_simdram_axi_ar_ready),
    .axi_ar_valid      (_chiptop0_axi4_mem_0_bits_ar_valid),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_ar_bits_id    (_chiptop0_axi4_mem_0_bits_ar_bits_id),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_ar_bits_addr  (_chiptop0_axi4_mem_0_bits_ar_bits_addr),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_ar_bits_len   (_chiptop0_axi4_mem_0_bits_ar_bits_len),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_ar_bits_size  (_chiptop0_axi4_mem_0_bits_ar_bits_size),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_ar_bits_burst (_chiptop0_axi4_mem_0_bits_ar_bits_burst),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_ar_bits_lock  (_chiptop0_axi4_mem_0_bits_ar_bits_lock),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_ar_bits_cache (_chiptop0_axi4_mem_0_bits_ar_bits_cache),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_ar_bits_prot  (_chiptop0_axi4_mem_0_bits_ar_bits_prot),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_ar_bits_qos   (_chiptop0_axi4_mem_0_bits_ar_bits_qos),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_r_ready       (_chiptop0_axi4_mem_0_bits_r_ready),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .axi_r_valid       (_simdram_axi_r_valid),
    .axi_r_bits_id     (_simdram_axi_r_bits_id),
    .axi_r_bits_data   (_simdram_axi_r_bits_data),
    .axi_r_bits_resp   (_simdram_axi_r_bits_resp),
    .axi_r_bits_last   (_simdram_axi_r_bits_last)
  );
  UARTAdapter uart_sim_0_uartno0 (	// @[generators/testchipip/src/main/scala/uart/SimUART.scala:76:28]
    .clock       (_source_1_clk),	// @[generators/chipyard/src/main/scala/harness/HarnessClocks.scala:70:26]
    .reset       (_harnessBinderReset_catcher_io_sync_reset),	// @[generators/rocket-chip/src/main/scala/util/ResetCatchAndSync.scala:39:28]
    .io_uart_txd (_chiptop0_uart_0_txd),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .io_uart_rxd (_uart_sim_0_uartno0_io_uart_rxd)
  );
  plusarg_reader #(
    .DEFAULT(0),
    .FORMAT("custom_boot_pin=%d"),
    .WIDTH(1)
  ) plusarg_reader (	// @[generators/rocket-chip/src/main/scala/util/PlusArg.scala:80:11]
    .out (_plusarg_reader_out)
  );
  SimJTAG #(
    .TICK_DELAY(3)
  ) jtag (	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:176:22]
    .clock           (_source_1_clk),	// @[generators/chipyard/src/main/scala/harness/HarnessClocks.scala:70:26]
    .reset           (_harnessBinderReset_catcher_io_sync_reset),	// @[generators/rocket-chip/src/main/scala/util/ResetCatchAndSync.scala:39:28]
    .jtag_TRSTn      (/* unused */),
    .jtag_TCK        (_jtag_jtag_TCK),
    .jtag_TMS        (_jtag_jtag_TMS),
    .jtag_TDI        (_jtag_jtag_TDI),
    .jtag_TDO_data   (_chiptop0_jtag_TDO),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .jtag_TDO_driven (1'h1),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:169:37]
    .enable          (_plusarg_reader_1_out[0]),	// @[generators/rocket-chip/src/main/scala/devices/debug/Periphery.scala:227:18, generators/rocket-chip/src/main/scala/util/PlusArg.scala:80:11]
    .init_done       (~_harnessBinderReset_catcher_io_sync_reset),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:177:82, generators/rocket-chip/src/main/scala/util/ResetCatchAndSync.scala:39:28]
    .exit            (_jtag_exit)
  );
  plusarg_reader #(
    .DEFAULT(0),
    .FORMAT("jtag_rbb_enable=%d"),
    .WIDTH(32)
  ) plusarg_reader_1 (	// @[generators/rocket-chip/src/main/scala/util/PlusArg.scala:80:11]
    .out (_plusarg_reader_1_out)
  );
  SerialRAM ram (	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:244:27]
    .clock            (_source_1_clk),	// @[generators/chipyard/src/main/scala/harness/HarnessClocks.scala:70:26]
    .reset            (_harnessBinderReset_catcher_io_sync_reset),	// @[generators/rocket-chip/src/main/scala/util/ResetCatchAndSync.scala:39:28]
    .io_ser_in_ready  (_ram_io_ser_in_ready),
    .io_ser_in_valid  (_chiptop0_serial_tl_0_out_valid),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .io_ser_in_bits   (_chiptop0_serial_tl_0_out_bits),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .io_ser_out_ready (_chiptop0_serial_tl_0_in_ready),	// @[generators/chipyard/src/main/scala/harness/HasHarnessInstantiators.scala:87:40]
    .io_ser_out_valid (_ram_io_ser_out_valid),
    .io_ser_out_bits  (_ram_io_ser_out_bits),
    .io_tsi_in_ready  (_ram_io_tsi_in_ready),
    .io_tsi_in_valid  (_success_exit_sim_tsi_in_valid),	// @[generators/testchipip/src/main/scala/tsi/SimTSI.scala:12:23]
    .io_tsi_in_bits   (_success_exit_sim_tsi_in_bits),	// @[generators/testchipip/src/main/scala/tsi/SimTSI.scala:12:23]
    .io_tsi_out_ready (_success_exit_sim_tsi_out_ready),	// @[generators/testchipip/src/main/scala/tsi/SimTSI.scala:12:23]
    .io_tsi_out_valid (_ram_io_tsi_out_valid),
    .io_tsi_out_bits  (_ram_io_tsi_out_bits)
  );
  SimTSI #(
    .CHIPID(0)
  ) success_exit_sim (	// @[generators/testchipip/src/main/scala/tsi/SimTSI.scala:12:23]
    .clock         (_source_1_clk),	// @[generators/chipyard/src/main/scala/harness/HarnessClocks.scala:70:26]
    .reset         (_harnessBinderReset_catcher_io_sync_reset),	// @[generators/rocket-chip/src/main/scala/util/ResetCatchAndSync.scala:39:28]
    .tsi_in_ready  (_ram_io_tsi_in_ready),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:244:27]
    .tsi_in_valid  (_success_exit_sim_tsi_in_valid),
    .tsi_in_bits   (_success_exit_sim_tsi_in_bits),
    .tsi_out_ready (_success_exit_sim_tsi_out_ready),
    .tsi_out_valid (_ram_io_tsi_out_valid),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:244:27]
    .tsi_out_bits  (_ram_io_tsi_out_bits),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:244:27]
    .exit          (_success_exit_sim_exit)
  );
  ResetCatchAndSync_d3 harnessBinderReset_catcher (	// @[generators/rocket-chip/src/main/scala/util/ResetCatchAndSync.scala:39:28]
    .clock         (_source_1_clk),	// @[generators/chipyard/src/main/scala/harness/HarnessClocks.scala:70:26]
    .reset         (reset),
    .io_sync_reset (_harnessBinderReset_catcher_io_sync_reset)
  );
  ClockSourceAtFreqMHz #(
    .PERIOD(2.000000e+00)
  ) source (	// @[generators/chipyard/src/main/scala/harness/HarnessClocks.scala:70:26]
    .power (1'h1),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:169:37]
    .gate  (1'h0),	// @[generators/chipyard/src/main/scala/harness/TestHarness.scala:23:25]
    .clk   (_source_clk)
  );
  ClockSourceAtFreqMHz #(
    .PERIOD(1.000000e+01)
  ) source_1 (	// @[generators/chipyard/src/main/scala/harness/HarnessClocks.scala:70:26]
    .power (1'h1),	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:169:37]
    .gate  (1'h0),	// @[generators/chipyard/src/main/scala/harness/TestHarness.scala:23:25]
    .clk   (_source_1_clk)
  );
  assign io_success = _success_exit_sim_exit == 32'h1 | _jtag_exit == 32'h1;	// @[generators/chipyard/src/main/scala/harness/HarnessBinders.scala:169:24, :176:22, :249:{26,39}, generators/rocket-chip/src/main/scala/devices/debug/Periphery.scala:232:26, generators/testchipip/src/main/scala/tsi/SimTSI.scala:12:23, :19:24]
endmodule

